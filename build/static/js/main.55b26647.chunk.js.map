{"version":3,"sources":["websocket/index.js","context/AppContext.js","components/Menu.js","components/WaitPage.js","components/Table.js","components/TrumpSymbol.js","lib/gameConfig.js","components/Card.js","components/DeckCards.js","lib/helpers.js","components/PlayerCards.js","components/TableCards.js","components/DiscardedCards.js","components/Cards.js","components/PassButton.js","components/Arrow.js","components/Timer.js","components/Filters.js","lib/GameState.js","lib/delayed-functions.js","components/App.js","serviceWorker.js","index.js"],"names":["websocket","client","connect","this","w3cwebsocket","listen","fn","onclose","onerror","error","onmessage","message","JSON","parse","data","send","messageObject","_this","stringify","readyState","OPEN","onopen","close","AppContext","React","createContext","MenuItemOption","props","changeItem","currOption","option","optionText","react_default","a","createElement","className","concat","onClick","style","cursor","Menu","username","mode","playersNumber","changeName","changeMode","isPlaying","changePlayersNumber","startGame","waitUsers","saveUserSettings","input","createRef","ref","type","value","onChange","e","target","current","placeholder","toUpperCase","slice","Menu_MenuItemOption","WaitPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","joinedUsers","userConfirms","allUsersConfirm","cancel","bind","assertThisInitialized","confirm","setState","startMultiplayGame","cancelWaiting","_this2","console","log","msgObj","updateJoinedUsers","groupSize","prevProps","isWaiting","connectToWebsocket","_this$props","_this$state","length","map","user","i","key","Component","Table","_ref","field","cx","width","cy","height","r","playerSpace","TrumpSymbol","placeCenter","cardSize","coords","x","y","context_AppContext","Consumer","_ref2","trumpSuit","href","transform","config","maxCardsAfterDealing","maxAttacks","Card","imageElement","id","rotation","side","activePlayer","_this$context","context","possibleCards","makeMove","cardStyles","updateCardStyles","movedCard","addMovedCard","removeMovedCard","gameConfig","translate","rotate","cardStyle","newStyle","transformOrigin","darker","includes","applyStyle","elem","transition","filter","changeStyles","window","requestAnimationFrame","setTimeout","onMouseOver","onMouseLeave","contextType","DeckCards","cards","react","card","shift","trump","objectSpread","components_Card","assign","components_TrumpSymbol","toRadian","angle","Math","PI","findRightTriangleSides","hypotenuse","cos","sin","getDeepCopy","obj","isArray","Array","newArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","slicedToArray","err","return","newObj","prop","PlayerCards","players","playerCardsPosition","userIndex","allCards","playerIndex","_playerCardsPosition$","objectWithoutProperties","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_ref5","cardIndex","oneCardShift","relativeToPlaceCenter","helpers","push","TableCards","attacks","_ref4","attackIndex","attack","_ref7","attacking","DiscardedCards","Cards","placeCenters","deck","table","discarded","components_DeckCards","components_PlayerCards","fromCenterToPlayerCards","from","_","relativeToCenterCoords","findPlayerCardsPosition","components_TableCards","components_DiscardedCards","PassButton","show","text","opacity","Arrow","defenderIndex","playersCount","fromCenter","relativeToCenter","points","Timer","timer","Filters","values","GameState","attacker","defender","defendSucceed","activePlayers","observable","subscriber","subscribe","update","updates","deckCards","shuffleCards","genCards","playerCards","ranks","suits","n","rank","suit","cardsCopy","j","floor","random","tmp","dealCards","chooseTrump","clearGameProps","dealerIndex","getNextIndex","index","dealOneCard","randomIndex","sortPlayerCards","pop","isTrump","sort","b","card1","card2","getNumberOfActivePlayers","endGame","updateActivePlayers","updateAttackerAndDefender","updateMaxAttacks","sendPossibleCardsToUser","decision","makeDecision","updateActivePlayerTimers","playerObject","pass","rejected","gameState","isPlayerInGame","nextIndex","indexes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","playersDontHaveTimers","userPass","defineAttackerAndDefenderByLowestTrump","minTrump","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","min","findPossibleCards","findCardsForDefend","findCardsForAttack","tableCards","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","apply","toConsumableArray","tableCardRanks","_this3","notBeatenAttacks","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_loop","attackCard","getHigherCard","forEach","_iterator7","isDefender","isAttackRequired","cardsInDeck","unbeatenCards","cardId","getCardById","addCardToTable","playerCard","defendCard","_this4","attackIndexes","place","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_this5","isUserInGame","userHasNoPossibleCards","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop2","randomTime","_playerObject$rejecte","_iterator10","endTrick","reduce","bool","clearTable","drawCardsFromDeck","_this6","discardedCards","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_this7","playersDrawnCards","changePlayers","newCards","playerHasCards","cardsNeeded","lastDeckCard","loser","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_ref9","_ref8","delayed_functions","functions","delaying","add","run","App","viewport","showButton","timeout","handleStateUpdate","updateViewport","reduceTimer","settingsString","localStorage","getItem","settings","setItem","name","number","delayedFunctions","defineProperty","html","document","documentElement","clientWidth","clientHeight","throttled","addEventListener","removeEventListener","updateObject","unsubscribe","addObserver","genPlayers","initNewGame","makeUserMove","prevState","prevAttacks","currAttacks","prevTrump","currTrump","startTrick","prevPossibleCards","_this$state2","skip","clearTimeout","getUserSettings","removeListener","addResizeListener","handleStartTrick","handleShowButton","handleEndGame","handleTimerUpdate","svg","aspectRatio","scale","Provider","components_Menu","components_WaitPage","components_Table","components_Cards","components_PassButton","components_Arrow","components_Timer","components_Filters","Boolean","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55b26647.chunk.js","sourcesContent":["import { w3cwebsocket } from 'websocket';\n\nconst websocket = {\n  client: null,\n  connect() {\n    if (!this.client) {\n      this.client = new w3cwebsocket('wss://durak-app.herokuapp.com/', 'echo-protocol');\n    }\n  },\n  listen(fn) {\n    this.client.onclose = () => fn('closed');\n    this.client.onerror = error => fn('error', error);\n    this.client.onmessage = message => \n      fn('message', JSON.parse(message.data));\n  },\n  send(messageObject) {\n    const message = JSON.stringify(messageObject);\n    if (this.client.readyState === this.client.OPEN) {\n      this.client.send(message);\n    } else {\n      this.client.onopen = () => this.client.send(message);\n    }\n  },\n  close() {\n    if (this.client) {\n      this.client.close();\n      this.client = null;\n    }\n  }\n};\n\nexport default websocket;","import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;","import React from 'react';\nimport '../stylesheets/Menu.css';\n\nconst MenuItemOption = props => {\n  const { changeItem, currOption, option, optionText } = props;\n  return (\n    <span \n      className={`menu-item-option ${currOption === option ? 'current' : ''}`}\n      onClick={currOption !== option ? () => changeItem(option) : null}\n      style={{ cursor: currOption !== option ? 'pointer' : 'default' }}\n    >\n      {optionText}\n    </span>\n  );\n};\n\nconst Menu = props => {\n  const { username, mode, playersNumber, changeName, changeMode, isPlaying,\n          changePlayersNumber, startGame, waitUsers, saveUserSettings } = props;\n          \n  const input = React.createRef();\n\n  const handleInputChange = e => {\n    let { value } = e.target;\n    if (input.current.placeholder) input.current.placeholder = '';\n    if (value) value = value[0].toUpperCase() + value.slice(1);\n    changeName(value);\n  };\n\n\n  const handleSubmit = () => {\n    if (!username) {\n      input.current.placeholder = 'You should enter name';\n      return;\n    }\n    if (mode === 'single-player') {\n      saveUserSettings();\n      startGame();\n    } else {\n      saveUserSettings();\n      waitUsers();\n    }\n  };\n\n  return (\n    <div className={`menu ${isPlaying ? 'hide' : ''}`}>\n      <h1>Menu</h1>\n      <div className=\"menu-items\">\n        <label className=\"menu-item\">\n          <span className=\"menu-item-name\">Enter Name:</span>\n          <input ref={input} type=\"text\" value={username} onChange={handleInputChange} />\n        </label>\n        <div className=\"menu-item\">\n          <span className=\"menu-item-name\">Choose Mode:</span>\n          <MenuItemOption \n            changeItem={changeMode} currOption={mode} \n            option=\"single-player\" optionText=\"Single Player\"\n          />\n          <MenuItemOption \n            changeItem={changeMode} currOption={mode}\n            option=\"multiplayer\" optionText=\"Multiplayer\"\n          />\n        </div>\n        <div className=\"menu-item\">\n          <span className=\"menu-item-name\">Choose Players Number:</span>\n          <MenuItemOption \n            changeItem={changePlayersNumber} currOption={playersNumber} \n            option={2} optionText=\"2\"\n          />\n          <MenuItemOption \n            changeItem={changePlayersNumber} currOption={playersNumber} \n            option={3} optionText=\"3\"\n          />\n          <MenuItemOption \n            changeItem={changePlayersNumber} currOption={playersNumber} \n            option={4} optionText=\"4\"\n          />\n          <MenuItemOption \n            changeItem={changePlayersNumber} currOption={playersNumber} \n            option={5} optionText=\"5\"\n          />\n          <MenuItemOption \n            changeItem={changePlayersNumber} currOption={playersNumber} \n            option={6} optionText=\"6\"\n          />\n        </div>\n      </div>\n      <button onClick={handleSubmit} >\n        {mode === 'single-player' ? 'Play' : 'Wait for Users'}\n      </button>\n    </div>\n  )\n};\n\nexport default Menu;","import React, { Component } from 'react';\nimport websocket from '../websocket';\nimport '../stylesheets/WaitPage.css';\n\nclass WaitPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      joinedUsers: [],\n      userConfirms: false,\n      allUsersConfirm: false\n    };\n\n    this.cancel = this.cancel.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  updateJoinedUsers(joinedUsers) {\n    this.setState({ joinedUsers, playersNumber: this.state.playersNumber });\n  }\n\n  confirm() {\n    this.setState({ userConfirms: true });\n    websocket.send({ type: 'confirm' });\n  }\n\n  allUsersConfirm() {\n    this.props.startMultiplayGame();\n  }\n\n  cancel() {\n    this.props.cancelWaiting();\n    websocket.close();\n  }\n\n  connectToWebsocket() {\n    websocket.connect();\n    console.log(websocket.client)\n    websocket.listen((type, msgObj) => {\n      if (type === 'message') {\n        if (msgObj.type === 'joinedUsers') this.updateJoinedUsers(msgObj.data.joinedUsers);\n        if (msgObj.type === 'allUsersConfirm') this.allUsersConfirm();\n      }\n      if (type === 'closed') this.cancel();\n    });\n    websocket.send({ \n      type: 'addData',\n      username: this.props.username,\n      groupSize: this.props.playersNumber\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.isWaiting && !prevProps.isPlaying && this.props.isWaiting) {\n      this.connectToWebsocket();\n      this.setState({ joinedUsers: [], userConfirms: false, allUsersConfirm: false });\n    }\n  }\n\n  render() {\n    const { isWaiting, playersNumber } = this.props;\n    const { joinedUsers, userConfirms } = this.state;\n\n    return (\n      <div className={`wait-page ${!isWaiting ? 'hide' : ''}`}>\n        <h1>Wait for Users</h1>\n        <div className=\"info\">\n          {!!joinedUsers.length && \n            <p><b>Joined Users: </b>\n              {joinedUsers.map((user, i) => \n                <span key={i}>{i ? ', ' + user : ' ' + user}</span>)}\n            </p>\n          }\n          <p><b>Remains to wait:</b> {playersNumber - joinedUsers.length}</p>\n          {userConfirms && <p>Waiting for Users to Confirm</p>}\n        </div>\n        <div className=\"buttons\">\n          <button className=\"cancel-button\" onClick={this.cancel}>Cancel</button>\n          {\n            joinedUsers.length === playersNumber && !userConfirms &&\n            <button className=\"confirm-button\" onClick={this.confirm}>Confirm</button>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WaitPage;","import React from 'react';\nimport '../stylesheets/Table.css';\n\nconst Table = ({field}) => {\n  const style = {\n    cx: field.width / 2 + 'px',\n    cy: field.height / 2 + 'px',\n    r: (field.width - field.playerSpace * 2) / 2 + 'px'\n  };\n  return <circle className=\"table\" style={style} />;\n};\n\nexport default Table;\n","import React from 'react';\nimport AppContext from '../context/AppContext';\n\nconst TrumpSymbol = ({ placeCenter }) => {\n  const cardSize = {\n    width: 50,\n    height: 77.78\n  };\n\n  const coords = {\n    x: placeCenter.x - cardSize.width / 2,\n    y: placeCenter.y - cardSize.height / 2\n  };\n  \n  return (\n    <AppContext.Consumer>\n      {\n        ({trumpSuit}) => {\n          if (trumpSuit) {\n            return (\n              <image\n                x={0}\n                y={0}\n                width={cardSize.width}\n                height={cardSize.height}\n                href={`/images/card-suits/${trumpSuit}.svg`}\n                style={{transform: `translate(${coords.x}px, ${coords.y}px)`}}\n              />\n            );\n          } else return null\n        }\n      }\n    </AppContext.Consumer>\n  );\n};\n\nexport default TrumpSymbol;","const config = {\n  cardSize: {\n    width: 50,\n    height: 77.78\n  },\n  maxCardsAfterDealing: 6,\n  maxAttacks: 6\n};\n\nexport default config;\n","import React, { Component } from 'react';\nimport AppContext from '../context/AppContext';\nimport gameConfig from '../lib/gameConfig';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.imageElement = React.createRef();\n  }\n\n  render() {\n    const { id, rotation, coords, side, activePlayer } = this.props;\n    const { possibleCards, makeMove, cardStyles, \n            updateCardStyles, movedCard, addMovedCard, removeMovedCard } = this.context;\n    const { imageElement } = this;\n    const { cardSize } = gameConfig;\n\n    const x = coords.x - cardSize.width / 2;\n    let y = coords.y - cardSize.height / 2;\n    if (activePlayer && movedCard === id) y -= 20;\n    const translate = `translate(${x}px, ${y}px)`;\n    const rotate = `rotate(${rotation ? rotation + 'deg' : '0deg'})`;\n    const cardStyle = cardStyles ? cardStyles[id] : null;\n    const newStyle = {\n      transformOrigin: `${coords.x}px ${coords.y}px`,\n      transform: `${rotate} ${translate}`\n    };\n\n    const darker = activePlayer && !possibleCards.includes(id);\n  \n    const applyStyle = (elem, style, transition) => {\n      elem.style.transform = style.transform;\n      elem.style.transformOrigin = style.transformOrigin;\n      elem.style.transition = transition ? '0.3s' : '0s';\n      elem.style.cursor = activePlayer && !darker ? 'pointer' : 'auto';\n      elem.style.filter = darker ? 'url(\"#darker\")' : 'none';\n    };\n\n  \n    (function changeStyles() {\n      window.requestAnimationFrame(() => {\n        const elem = imageElement.current;\n        if (!elem) changeStyles();\n        else {\n          if (cardStyle) {\n            applyStyle(elem, cardStyle, false);\n            window.requestAnimationFrame(() => {\n              applyStyle(elem, newStyle, true);\n              updateCardStyles(id, newStyle);\n            });\n          } else {\n            applyStyle(elem, newStyle, false);\n            updateCardStyles(id, newStyle);\n          }\n        }\n      });\n    })();\n\n    const moveCardUp = () => {\n      if (!movedCard && activePlayer && !darker) addMovedCard(id);\n    };\n\n    const moveCardDown = () => {\n      if (movedCard === id) removeMovedCard();\n    };\n  \n    const onClick = () => {\n      if (activePlayer && !darker) {\n        makeMove(id);\n        if (movedCard === id) setTimeout(removeMovedCard, 300);\n      }\n    };\n  \n    return (\n      <image\n        ref={this.imageElement}\n        x={0}\n        y={0}\n        width={cardSize.width}\n        height={cardSize.height}\n        href={side === 'front' ?\n          `/images/cards/${id}.png` :\n          `/images/cards/back.png`\n        }\n        id={id}\n        className=\"card\"\n        onClick={onClick}\n        onMouseOver={moveCardUp}\n        onMouseLeave={moveCardDown}\n      />\n    );\n  }\n}\n\nCard.contextType = AppContext;\n\nexport default Card;\n","import React, { Fragment } from 'react';\nimport TrumpSymbol from './TrumpSymbol';\nimport Card from './Card';\n\nconst DeckCards = props => {\n  const { cards, placeCenter } = props;\n  \n  const addProps = (card, i) => {\n    const shift = {\n      x: i * 0.1 + (card.trump ? -19 : 0),\n      y: -i * 0.1 + (card.trump ? 13 : 0)\n    };\n    const coords = {\n      x: placeCenter.x + shift.x,\n      y: placeCenter.y + shift.y\n    };\n    const rotation = card.trump ? 90 : 0;\n    return {\n      ...card,\n      coords,\n      rotation,\n      side: card.trump ? 'front' : 'back'\n    };\n  };\n\n  return (\n    <Fragment>\n      {\n        cards.length ?\n          cards.map(addProps).map(card => <Card {...card} key={card.id} />) :\n          <TrumpSymbol placeCenter={placeCenter} />\n      }\n    </Fragment>\n  );\n};\n\nexport default DeckCards;\n","const toRadian = angle => angle * Math.PI / 180;\n\nexport const findRightTriangleSides = (angle, hypotenuse) => {\n  return {\n    x: Math.cos(toRadian(angle)) * hypotenuse,\n    y: Math.sin(toRadian(angle)) * hypotenuse\n  };\n};\n\nexport const getDeepCopy = obj => {\n  const isArray = obj instanceof Array;\n  const isObj = typeof obj === 'object' && !isArray;\n  if (!isArray && !isObj) return obj;\n  if (isArray) {\n    const newArray = [];\n    for (const [i, elem] of obj.entries()) {\n      newArray[i] = getDeepCopy(elem);\n    }\n    return newArray;\n  } \n  // It is object\n  const newObj = {};\n  for (const prop in obj) {\n    newObj[prop] = getDeepCopy(obj[prop]);\n  }\n  return newObj;\n};\n\nexport const getFieldProps = viewport => {\n  const svg = {\n    ...viewport,\n    aspectRatio: viewport.width / viewport.height\n  };\n\n  const field = {\n    width: 700,\n    height: 600,\n    playerSpace: 150,\n    aspectRatio: 700 / 600\n  };\n\n  if (svg.aspectRatio > field.aspectRatio) {\n    field.scale = svg.height / field.height;\n    field.x = (svg.width - (field.width * field.scale)) / 2;\n    field.y = 0;\n  } else {\n    field.scale = svg.width / field.width;\n    field.x = 0;\n    field.y = (svg.height - (field.height * field.scale)) / 2;\n  }\n\n  field.style = {\n    transform: `translate(${field.x}px, ${field.y}px) scale(${field.scale})`\n  };\n\n  return field;\n};","import React, { Fragment } from 'react';\nimport Card from './Card';\nimport * as helpers from '../lib/helpers';\n\nconst PlayerCards = props => {\n  const { players, playerCardsPosition, userIndex } = props;\n  const allCards = [];\n\n  for (const [playerIndex, cards] of players.entries()) {\n    const { angle, ...placeCenter } = playerCardsPosition[playerIndex];\n    for (const [cardIndex, card] of cards.entries()) {\n      const oneCardShift = playerIndex === userIndex ? 20 : 5;\n      const shift = (cardIndex - (cards.length - 1) / 2) * oneCardShift;\n      const relativeToPlaceCenter = helpers.findRightTriangleSides(\n        angle,\n        shift\n      );\n      const coords = {\n        x: placeCenter.x + relativeToPlaceCenter.x,\n        y: placeCenter.y + relativeToPlaceCenter.y\n      };\n\n      allCards.push({\n        ...card,\n        rotation: angle,\n        coords,\n        side: playerIndex === userIndex ? 'front' : 'back',\n        activePlayer: playerIndex === userIndex\n      });\n    }\n  }\n\n  return (\n    <Fragment>\n      {allCards.map(card =>  <Card { ...card } key={card.id} />)}\n    </Fragment>\n  );\n};\n\nexport default PlayerCards;\n","import React, { Fragment } from 'react';\nimport Card from './Card';\n\nconst TableCards = ({ attacks, placeCenter }) => {\n  const allCards = [];\n  for (const [attackIndex, attack] of attacks.entries()) {\n    for (const [cardIndex, card] of attack.entries()) {\n      const attacking = cardIndex === 0;\n      const shift = {};\n      if (attacks.length > 3) {\n        if (attackIndex > 2) {\n          shift.x = attackIndex - 3 - (attacks.length - 4) / 2;\n          shift.y = 1;\n        } else {\n          shift.x = attackIndex - 1;\n          shift.y = -1;\n        }\n      } else {\n        shift.x = attackIndex - (attacks.length - 1) / 2;\n        shift.y = 0;\n      }\n\n      if (!attacking) {\n        shift.x += 0.05;\n        shift.y += 0.4;\n      }\n\n      shift.x = shift.x * 70;\n      shift.y = shift.y * 60;\n\n      const coords = {\n        x: placeCenter.x + shift.x,\n        y: placeCenter.y + shift.y\n      };\n\n      allCards.push({ ...card, coords, side: 'front' });\n    }\n  }\n\n  return (\n    <Fragment>\n      {allCards.map(card => <Card { ...card } key={card.id} />)}\n    </Fragment>\n  );\n};\n\nexport default TableCards;\n","import React, { Fragment } from 'react';\nimport Card from './Card';\n\nconst DiscardedCards = ({ cards, placeCenter }) => (\n  <Fragment>\n    {cards.map(card => \n      <Card {...card} key={card.id} coords={ {...placeCenter} } side= 'back' />\n    )}\n  </Fragment>\n);\n\nexport default DiscardedCards;\n","import React, { Fragment } from 'react';\nimport DeckCards from './DeckCards';\nimport PlayerCards from './PlayerCards';\nimport TableCards from './TableCards';\nimport DiscardedCards from './DiscardedCards';\nimport * as helpers from '../lib/helpers';\n\nconst Cards = props => {\n  const { cards, field, players, userIndex } = props;\n  const findPlayerCardsPosition = () => {\n    const avgSide = (field.width + field.height) / 2;\n    const fromCenterToPlayerCards = avgSide / 2 - field.playerSpace / 2;\n\n    return Array.from(\n      { length: players.length },\n      (_, i) => {\n        const angle = (i - userIndex) * 360 / players.length;\n        const relativeToCenterCoords = helpers.findRightTriangleSides(\n          angle + 90,\n          fromCenterToPlayerCards\n        );\n        return {\n          angle,\n          x: field.width / 2 + relativeToCenterCoords.x,\n          y: field.height / 2 + relativeToCenterCoords.y\n        };\n      }\n    );\n  };\n\n  const placeCenters = {\n    deck: {\n      x: field.width * 0.36,\n      y: field.height * 0.5\n    },\n    table: {\n      x: field.width * 0.55,\n      y: field.height * 0.48\n    },\n    discarded: {\n      x: field.width * 1.7,\n      y: field.height * 0.5\n    }\n  };\n\n  return (\n    <Fragment>\n      <DeckCards cards={cards.deck} placeCenter={placeCenters.deck} />\n      <PlayerCards \n        players={cards.players} \n        playerCardsPosition={findPlayerCardsPosition()} \n        userIndex={userIndex}\n      />\n      <TableCards attacks={cards.table} placeCenter={placeCenters.table} />\n      <DiscardedCards cards={cards.discarded} placeCenter={placeCenters.discarded} />\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport '../stylesheets/PassButton.css';\n\nconst PassButton = ({show, text, onClick}) => {\n  const style = {\n    opacity: show ? 1 : 0,\n    cursor: show ? 'pointer' : 'default'\n  };\n\n\n  return (\n    <g\n      className=\"pass-button\"\n      style={style}\n      onClick={onClick}\n    >\n      <rect />\n      <text>{text}</text>\n    </g>\n  );\n};\n\nexport default PassButton;\n","import React from 'react';\nimport * as helpers from '../lib/helpers';\nimport '../stylesheets/Arrow.css';\n\nconst Arrow = ({field, defenderIndex, playersCount, userIndex}) => {\n\tif (defenderIndex === null) return null;\n\tconst angle = (defenderIndex - userIndex) * 360 / playersCount;\n\tconst fromCenter = (field.width - field.playerSpace * 2) / 2 - 35;\n\tconst relativeToCenter = helpers.findRightTriangleSides(\n\t\tangle + 95,\n\t\tfromCenter\n\t);\n\tconst x = field.width / 2 + relativeToCenter.x;\n\tconst y = field.height / 2 + relativeToCenter.y;\n\n\tconst style = {\n\t\ttransform: `rotate(${angle}deg) translate(${x}px, ${y}px)`,\n\t\ttransformOrigin: `${x}px ${y}px`\n\t};\n\n\treturn (\n\t\t<polygon className=\"arrow\" points=\"0,0 28,0 14,28\" x={0} y={0} style={style} />\n\t)\n};\n\nexport default Arrow;","import React from 'react';\nimport '../stylesheets/Timer.css'\n\nconst Timer = ({ timer }) => {\n  if (timer === null) return null;\n\n  return (\n    <g className=\"timer\" >\n      <rect />\n      <text>{timer}</text>\n    </g>\n  );\n  \n};\n\nexport default Timer;","import React from 'react';\n\nconst Filters = () => {\n  return (\n    <defs>\n      <filter id=\"darker\">\n        <feColorMatrix\n          type=\"matrix\"\n          values=\".6   0   0   0   0\n                  0  .6   0   0   0\n                  0   0  .6   0   0\n                  0   0   0   1   0 \"/>\n      </filter>\n    </defs>\n  );\n};\n\nexport default Filters;\n","import config from './gameConfig';\nimport * as helpers from './helpers';\n\nclass GameState {\n  constructor(mode) {\n    this.cards = {\n      deck: [],\n      players: [],\n      table: [],\n      discarded: []\n    };\n    this.userIndex = 0;\n    this.trumpSuit = null;\n    this.attacker = null;\n    this.defender = null;\n    this.defendSucceed = null;\n    this.activePlayers = {\n      players: []\n    };\n    this.maxAttacks = 0;\n    this.observable = {\n      subscriber: null,\n      subscribe(fn) {\n        this.subscriber = fn;\n        return () => this.subscriber = null;\n      },\n      update(updates) {\n        this.subscriber(updates);\n      }\n    };\n  }\n  initNewGame(playersNumber) {\n    const deckCards = this.shuffleCards(this.genCards());\n    const playerCards = Array.from({length: playersNumber}, () => ([]));\n    this.cards = {\n      ...this.cards,\n      deck: deckCards,\n      players: playerCards\n    };\n    this.observable.update([{ prop: 'cards', value: this.cards }]);\n  }\n  genCards() {\n    const ranks = [\n      '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'\n    ];\n    const values = [\n      2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\n    ];\n    const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\n    const cards = [];\n    for (let i = 0; i < ranks.length; i++) {\n      for (let n = 0; n < suits.length; n++) {\n        cards.push({\n          id: `${ranks[i]}-${suits[n]}`,\n          rank: ranks[i],\n          suit: suits[n],\n          value: values[i]\n        });\n      }\n    }\n\n    return cards;\n  }\n  shuffleCards(cards) {\n    const cardsCopy = helpers.getDeepCopy(cards);\n\n    for (let i = cardsCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const tmp = helpers.getDeepCopy(cardsCopy[i]);\n      cardsCopy[i] = helpers.getDeepCopy(cardsCopy[j]);\n      cardsCopy[j] = helpers.getDeepCopy(tmp);\n    }\n\n    return cardsCopy;\n  }\n  startGame() {\n    this.dealCards();\n    this.chooseTrump();\n    this.clearGameProps();\n  }\n  dealCards() {\n    const dealerIndex = this.userIndex;\n    const playersNumber = this.cards.players.length;\n    const getNextIndex = index => index + 1 === playersNumber ? 0 : index + 1;\n    let index = getNextIndex(dealerIndex);\n    while(this.cards.players[index].length < config.maxCardsAfterDealing) {\n      this.dealOneCard(index);\n      this.observable.update([{ prop: 'cards', value: this.cards }]);\n      index = getNextIndex(index);\n    }\n  }\n  chooseTrump() {\n    const deckCards = helpers.getDeepCopy(this.cards.deck);\n    const randomIndex = Math.floor(Math.random() * deckCards.length);\n    const card = deckCards[randomIndex];\n    deckCards[randomIndex] = deckCards[0];\n    deckCards[0] = { ...card, trump: true };\n    this.cards = {\n      ...this.cards,\n      deck: deckCards\n    };\n    this.trumpSuit = card.suit;\n    this.sortPlayerCards();\n    this.observable.update([\n      { prop: 'cards', value: this.cards },\n      { prop: 'trumpSuit', value: this.trumpSuit }\n    ]);\n  }\n  dealOneCard(playerIndex) {\n    const deckCards = helpers.getDeepCopy(this.cards.deck);\n    const playerCards = helpers.getDeepCopy(this.cards.players);\n    const card = deckCards.pop();\n    playerCards[playerIndex].push(card);\n\n    this.cards = {\n      ...this.cards,\n      deck: deckCards,\n      players: playerCards\n    };\n    this.sortPlayerCards();\n  }\n  sortPlayerCards() {\n    const isTrump = card => card.suit === this.trumpSuit;\n    const isEqualSuit = (card1, card2) => {\n      if (!this.trumpSuit) return true;\n      if (isTrump(card1) && isTrump(card2)) return true;\n      if (!isTrump(card1) && !isTrump(card2)) return true;\n      return false;\n    };\n\n    const playerCards = helpers.getDeepCopy(this.cards.players);\n    for (const cards of playerCards) {\n      cards.sort((a, b) => {\n        if (isEqualSuit(a, b)) return a.value - b.value;\n        if (isTrump(a) && !isTrump(b)) return 1;\n        if (!isTrump(a) && isTrump(b)) return -1;\n        return 0;\n      });\n    }\n\n    this.cards = {\n      ...this.cards,\n      players: playerCards\n    };\n  }\n  clearGameProps() {\n    this.defendSucceed = null;\n  }\n  startTrick() {\n    if (this.getNumberOfActivePlayers() < 2) this.endGame();\n    else {\n      this.updateActivePlayers();\n      this.updateAttackerAndDefender();\n      this.updateMaxAttacks();\n      if (this.attacker === this.userIndex) this.sendPossibleCardsToUser();\n      else {\n        const decision = this.makeDecision(this.attacker);\n        this.makeMove(this.attacker, decision);\n        this.updateActivePlayerTimers();\n      }\n    }\n  }\n  getNumberOfActivePlayers() {\n    return this.cards.players.filter(cards => cards.length).length;\n  }\n  updateActivePlayers() {\n    const activePlayers = [];\n    for (const [playerIndex, cards] of this.cards.players.entries()) {\n      if (cards.length) {\n        const playerObject = { index: playerIndex };\n        if (playerIndex === this.userIndex) playerObject.pass = false;\n        else {\n          playerObject.timer = null;\n          playerObject.rejected = [];\n        }\n        activePlayers.push(playerObject);\n      }\n    }\n    const gameState = this;\n    this.activePlayers = {\n      players: activePlayers,\n      isPlayerInGame(index) {\n        return !!this.players.filter(playerObject => playerObject.index === index)[0];\n      },\n      getNextIndex(index) {\n        const indexes = this.players.map(playerObject => playerObject.index);\n        let nextIndex;\n        for (const i of indexes) {\n          if (i > index) {\n            nextIndex = i;\n            break;\n          }\n        }\n        if (nextIndex === undefined) nextIndex = indexes[0];\n        return nextIndex;\n      },\n      playersDontHaveTimers() {\n        const playersWithTimers = this.players.filter(playerObject =>  playerObject.timer);\n        return !playersWithTimers.length;\n      },\n      userPass() {\n        this.players = this.players.map(playerObject => \n          playerObject.index === gameState.userIndex ? \n            ({ ...playerObject, pass: true }) : \n            playerObject)\n      }\n    };\n  }\n  updateAttackerAndDefender() {\n    if (this.defendSucceed === null) this.defineAttackerAndDefenderByLowestTrump();\n    else if (this.defendSucceed) {\n      if (this.activePlayers.isPlayerInGame(this.defender)) {\n        this.attacker = this.defender;\n      } else {\n        this.attacker = this.activePlayers.getNextIndex(this.defender);\n      }\n    } else {\n      this.attacker = this.activePlayers.getNextIndex(this.defender);\n    }\n\n    this.defender = this.activePlayers.getNextIndex(this.attacker);\n\n    this.observable.update([\n      { prop: 'attacker', value: this.attacker },\n      { prop: 'defender', value: this.defender }\n    ])\n  }\n  defineAttackerAndDefenderByLowestTrump() {\n    const playerCards = this.cards.players;\n    const playersNumber = playerCards.length;\n    let minTrump = {\n      playerIndex: null,\n      value: 15\n    };\n    for (const [index, cards] of playerCards.entries()) {\n      for (const card of cards) {\n        if (card.suit === this.trumpSuit && card.value < minTrump.value) {\n          minTrump = {\n            playerIndex: index,\n            value: card.value\n          };\n        }\n      }\n    }\n\n    if (minTrump.playerIndex !== null) {\n      this.attacker = minTrump.playerIndex;\n    } else {\n      const randomIndex = Math.floor(Math.random() * playersNumber);\n      this.attacker = randomIndex;\n    }\n    this.defender = this.activePlayers.getNextIndex(this.attacker);\n  }\n  updateMaxAttacks() {\n    this.maxAttacks = Math.min(\n      this.cards.players[this.defender].length,\n      config.maxAttacks\n    );\n  }\n  sendPossibleCardsToUser(possibleCards) {\n    if (!possibleCards) possibleCards = this.findPossibleCards(this.userIndex);\n    this.observable.update([{prop: 'possibleCards', value: possibleCards}]);\n  }\n  findPossibleCards(playerIndex) {\n    if (playerIndex === this.defender) return this.findCardsForDefend(playerIndex);\n    else return this.findCardsForAttack(playerIndex);\n  }\n  findCardsForAttack(playerIndex) {\n    const attacks = this.cards.table;\n    const playerCards = this.cards.players[playerIndex];\n    if (attacks.length >= this.maxAttacks) return [];\n    if (!attacks.length) return playerCards.map(card => card.id);\n\n    const tableCards = [];\n    for (const attack of attacks) {\n      tableCards.push(...attack);\n    }\n    const tableCardRanks = tableCards.map(card => card.rank);\n    return playerCards.filter(card => tableCardRanks.includes(card.rank))\n                      .map(card => card.id);\n  }\n  findCardsForDefend(playerIndex) {\n    const playerCards = this.cards.players[playerIndex];\n    const notBeatenAttacks = this.cards.table\n      .map((attack, index) => ({cards: attack, index}))\n      .filter(attack => {\n        if (attack.cards.length === 1) return true;\n        return false;\n      });\n    const possibleCards = [];\n    for (const attack of notBeatenAttacks) {\n      const attackCard = attack.cards[0];\n      playerCards.filter(card =>\n        this.getHigherCard(card, attackCard).id === card.id\n      ).forEach(card => {\n        if (!possibleCards.includes(card.id)) possibleCards.push(card.id);\n      });\n    }\n    return possibleCards;\n  }\n  makeDecision(playerIndex) {\n    const possibleCards = this.findPossibleCards(playerIndex);\n    if (possibleCards.length) {\n      const isDefender = this.defender === playerIndex;\n      const isAttackRequired = !this.cards.table.length;\n      const cardsInDeck = !!this.cards.deck.length;\n      const unbeatenCards = this.cards.table.filter(attack => attack.length === 1);\n      const cardId = possibleCards[0];\n      const card = this.getCardById(cardId);\n      let pass = false;\n\n      if (!isDefender) {\n        if (!isAttackRequired) {\n          if (cardsInDeck && card.suit === this.trumpSuit) pass = true;\n        }\n      } else {\n        if (possibleCards.length < unbeatenCards.length) pass = true;\n        if (cardsInDeck && card.suit === this.trumpSuit && card.value > 10) pass = true;\n      }\n\n      if (!pass) return cardId;\n      else return null;\n    } \n  }\n  makeMove(playerIndex, cardId) {\n    const isDefender = playerIndex === this.defender;\n    const card = this.getCardById(cardId);\n\n    const tableCards = this.addCardToTable(card, isDefender);\n\n    const playerCards = this.cards.players.map((cards, index) => {\n      if (index === playerIndex) {\n        return cards.filter(playerCard => playerCard.id !== cardId);\n      } else return cards;\n    });\n\n    this.cards = {\n      ...this.cards,\n      table: tableCards,\n      players: playerCards\n    };\n    this.observable.update([{ prop: 'cards', value: this.cards }]);\n  }\n  addCardToTable(card, defendCard) {\n    const tableCards = helpers.getDeepCopy(this.cards.table);\n    if (defendCard) {\n      let attackIndexes = [];\n      tableCards.forEach((attack, index) => {\n        if (attack.length === 1 &&\n            this.getHigherCard(card, attack[0]).id === card.id) {\n              attackIndexes.push(index);\n        }\n      });\n      const randomIndex = Math.floor(Math.random() * attackIndexes.length);\n      const attackIndex = attackIndexes[randomIndex];\n      return tableCards.map((attack, index) =>\n        index === attackIndex ? ([ ...attack, card ]) : attack\n      );\n    } \n    \n    return [ ...this.cards.table, [ card] ];\n  }\n  getCardById(id) {\n    for (const place in this.cards) {\n      for (const elem of this.cards[place]) {\n        if (elem instanceof Array) {\n          for (const card of elem) {\n            if (card.id === id) return card;\n          }\n        } else {\n          if (elem.id === id) return elem;\n        }\n      }\n    }\n  }\n  getHigherCard(a, b) {\n    if (a.suit === b.suit) {\n      if (a.value > b.value) return a;\n      else return b;\n    }\n    if (a.suit === this.trumpSuit) return a;\n    return b;\n  }\n  updateActivePlayerTimers() {\n    const isUserInGame = this.activePlayers.isPlayerInGame(this.userIndex);\n    let userHasNoPossibleCards = isUserInGame ? false : true;\n    for (const playerObject of this.activePlayers.players) {\n      if (playerObject.index === this.userIndex) {\n        if (playerObject.pass) userHasNoPossibleCards = true;\n        else {\n          const possibleCards = this.findPossibleCards(playerObject.index);\n          if (!possibleCards.length) userHasNoPossibleCards = true;\n          this.sendPossibleCardsToUser(possibleCards);\n        }\n      } else if (!playerObject.timer) {\n        const possibleCards = this.findPossibleCards(playerObject.index)\n          .filter(cardId => \n            !playerObject.rejected.includes(cardId));\n        \n        if (possibleCards.length) {\n          const randomTime = isUserInGame ? \n            Math.random() * 2000 + 2000 :\n            Math.random() * 1500 + 1500;\n          \n          playerObject.timer = setTimeout(\n            () => {\n              playerObject.timer = null;\n              const decision = this.makeDecision(playerObject.index);\n              if (decision) this.makeMove(playerObject.index, decision);\n              else playerObject.rejected.push(...possibleCards);\n\n              this.updateActivePlayerTimers();\n            }, randomTime);\n        }\n      }\n    }\n    if (this.activePlayers.playersDontHaveTimers() && userHasNoPossibleCards) {\n      this.endTrick();\n    }\n  }\n  endTrick() {\n    this.defendSucceed = this.cards.table.reduce((bool, attack) =>\n      attack.length === 1 ? false : bool, true);\n\n    this.clearTable();\n    this.drawCardsFromDeck();\n  }\n  clearTable() {\n    const playerCards = helpers.getDeepCopy(this.cards.players[this.defender]);\n    const discardedCards = helpers.getDeepCopy(this.cards.discarded);\n    for (const attack of this.cards.table) {\n      for (const card of attack) {\n        if (this.defendSucceed) discardedCards.push(card);\n        else playerCards.push(card);\n      }\n    }\n    this.cards = {\n      ...this.cards,\n      players: this.cards.players.map((cards, index) =>\n        index === this.defender ? playerCards : cards),\n      discarded: discardedCards,\n      table: []\n    };\n    this.sortPlayerCards();\n    this.observable.update([{ prop: 'cards', value: this.cards }]);\n  }\n  drawCardsFromDeck() {\n    const playersNumber = this.cards.players.length;\n    let playersDrawnCards = 0;\n    let index = this.attacker;\n    const changePlayers = (index, newCards) =>\n      this.cards.players.map((cards, i) => index === i ? newCards : cards);\n\n    while(playersDrawnCards < playersNumber) {\n      const playerHasCards = this.cards.players[index].length;\n      if (playerHasCards < config.maxCardsAfterDealing) {\n        const cardsNeeded = config.maxCardsAfterDealing - playerHasCards;\n        const playerCards = helpers.getDeepCopy(this.cards.players[index]);\n        const deckCards = helpers.getDeepCopy(this.cards.deck);\n\n        for (let i = 0; i < cardsNeeded; i++) {\n          if (deckCards.length) {\n            const lastDeckCard = deckCards.pop();\n            playerCards.push(lastDeckCard);\n          }\n        }\n\n        this.cards = {\n          ...this.cards,\n          players: changePlayers(index, playerCards),\n          deck: deckCards\n        };\n      }\n\n      this.sortPlayerCards();\n      this.observable.update([{ prop: 'cards', value: this.cards }]);\n      playersDrawnCards++;\n      index = index - 1;\n      if (index === -1) index = playersNumber - 1;\n    }\n  }\n  endGame() {\n    let loser = null;\n    for (const [playerIndex, cards] of this.cards.players.entries()) {\n      if (cards.length) {\n        loser = playerIndex;\n        break;\n      }\n    }\n    this.trumpSuit = null;\n    this.cards = {\n      deck: [],\n      players: [],\n      table: [],\n      discarded: []\n    };\n    this.observable.update([\n      { prop: 'isPlaying', value: false },\n      { prop: 'trumpSuit', value: null },\n      { prop: 'attacker', value: null },\n      { prop: 'defender', value: null },\n      { prop: 'loser', value: loser }\n    ]);\n  }\n  makeUserMove(cardId) {\n    const possibleCards = this.findPossibleCards(this.userIndex);\n    if (possibleCards.includes(cardId)) {\n      this.makeMove(this.userIndex, cardId);\n      this.updateActivePlayerTimers();\n    }\n  }\n  pass() {\n    this.activePlayers.userPass();\n    this.observable.update([{prop: 'possibleCards', value: []}])\n    this.updateActivePlayerTimers();\n  }\n};\n\nexport default GameState;","export default {\n  functions: [],\n  delaying: false,\n  add(fn) {\n    this.functions.push(fn);\n    this.run();\n  },\n  run() {\n    if (this.functions.length && !this.delaying) {\n      const fn = this.functions[0];\n      this.delaying = true;\n      setTimeout(() => {\n        fn();\n        this.functions.shift();\n        this.delaying = false;\n        this.run();\n      }, 200);\n    }\n  }\n};\n","import React, {Component} from 'react';\nimport websocket from '../websocket';\nimport AppContext from '../context/AppContext';\nimport Menu from './Menu';\nimport WaitPage from './WaitPage';\nimport Table from './Table';\nimport Cards from './Cards';\nimport PassButton from './PassButton';\nimport Arrow from './Arrow';\nimport Timer from './Timer';\nimport Filters from './Filters';\nimport GameState from '../lib/GameState';\nimport delayedFunctions from '../lib/delayed-functions';\nimport * as helpers from '../lib/helpers';\nimport '../stylesheets/App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tviewport: {\n\t\t\t\twidth: 1024,\n\t\t\t\theight: 768\n\t\t\t},\n\t\t\tisPlaying: false,\n\t\t\tisWaiting: false,\n\t\t\tuserIndex: 0,\n\t\t\tusername: '',\n\t\t\tmode: 'single-player',\n\t\t\tplayersNumber: 2,\n\t\t\tplayers: [],\n\t\t\tcards: {\n\t\t\t\tdeck: [],\n\t\t\t\tplayers: [],\n\t\t\t\ttable: [],\n\t\t\t\tdiscarded: []\n\t\t\t},\n\t\t\tpossibleCards: [],\n\t\t\tattacker: null,\n\t\t\tdefender: null,\n\t\t\ttrumpSuit: null,\n\t\t\tloser: null,\n\t\t\tshowButton: false,\n\t\t\tmovedCard: null,\n\t\t\ttimer: null\n\t\t};\n\n\t\tthis.timeout = null;\n\t\tthis.gameState = null;\n\t\tthis.cardStyles = null;\n\t\tthis.handleStateUpdate = this.handleStateUpdate.bind(this);\n\t\tthis.updateViewport = this.updateViewport.bind(this);\n\t\tthis.startGame = this.startGame.bind(this);\n\t\tthis.makeMove = this.makeMove.bind(this);\n\t\tthis.pass = this.pass.bind(this);\n\t\tthis.updateCardStyles = this.updateCardStyles.bind(this);\n\t\tthis.addMovedCard = this.addMovedCard.bind(this);\n\t\tthis.removeMovedCard = this.removeMovedCard.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeMode = this.changeMode.bind(this);\n\t\tthis.changePlayersNumber = this.changePlayersNumber.bind(this);\n\t\tthis.saveUserSettings = this.saveUserSettings.bind(this);\n\t\tthis.waitUsers = this.waitUsers.bind(this);\n\t\tthis.cancelWaiting = this.cancelWaiting.bind(this);\n\t\tthis.startMultiplayGame = this.startMultiplayGame.bind(this);\n\t\tthis.reduceTimer = this.reduceTimer.bind(this);\n\t}\n\n\tgetUserSettings() {\n\t\tconst settingsString = localStorage.getItem('settings');\n\t\tif (settingsString) {\n\t\t\tconst settings = JSON.parse(settingsString);\n\t\t\tconst { username, mode, playersNumber } = settings;\n\t\t\tthis.setState({ username, mode, playersNumber });\n\t\t}\n\t}\n\n\tsaveUserSettings() {\n\t\tconst { username, mode, playersNumber } = this.state;\n\t\tconst settingsString = JSON.stringify({ username, mode, playersNumber });\n\t\tlocalStorage.setItem('settings', settingsString);\n\t}\n\n\tchangeName(name) {\n\t\tthis.setState({ username: name });\n\t}\n\n\tchangeMode(mode) {\n\t\tthis.setState({ mode });\n\t}\n\n\tchangePlayersNumber(number) {\n\t\tthis.setState({ playersNumber: number });\n\t}\n\n\twaitUsers() {\n\t\tthis.setState({ isWaiting: true });\n\t}\n\n\tcancelWaiting() {\n\t\tthis.setState({ isWaiting: false });\n\t}\n\n\tstartMultiplayGame() {\n\t\tthis.setState({ isWaiting: false, isPlaying: true });\n\t\twebsocket.listen((type, msgObj) => {\n\t\t\tif (type === 'message' && msgObj.type === 'gameStateUpdate') {\n\t\t\t\tdelayedFunctions.add(() => this.handleStateUpdate(msgObj.data.updates));\n\t\t\t}\n\t\t});\n\t}\n\n\taddObserver() {\n\t\treturn this.gameState.observable.subscribe(updates => {\n\t\t\tdelayedFunctions.add(() => this.handleStateUpdate(updates));\n\t\t});\n\t}\n\n\tupdateCardStyles(cardId, style) {\n\t\tthis.cardStyles = {\n\t\t\t...this.cardStyles,\n\t\t\t[cardId]: style\n\t\t};\n\t}\n\n\tupdateViewport() {\n\t\tconst html = document.documentElement;\n\t\tconst width = html.clientWidth;\n\t\tconst height = html.clientHeight;\n\t\tthis.setState({\n\t\t\tviewport: { width, height }\n\t\t});\n\t}\n\n\taddResizeListener() {\n\t\tlet throttled = false;\n\t\tconst fn = () => {\n\t\t\tif (!throttled) {\n\t\t\t\tthrottled = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrottled = false;\n\t\t\t\t\tthis.updateViewport();\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t};\n\t\twindow.addEventListener('resize', fn);\n\t\treturn () => window.removeEventListener('resize', fn);\n\t}\n\n\tgenPlayers(playersNumber) {\n\t\tconst players = Array.from(\n\t\t\t{ length: playersNumber },\n\t\t\t(_, i) => ({ name: 'Player' + i })\n\t\t);\n\t\treturn players;\n\t}\n\n\thandleStateUpdate(updates) {\n\t\tconst updateObject = {};\n\t\tfor (let { prop, value } of updates) {\n\t\t\tupdateObject[prop] = value;\n\t\t}\n\n\t\tthis.setState(updateObject);\n\t}\n\n\taddMovedCard(cardId) {\n\t\tthis.setState({movedCard: cardId});\n\t}\n\n\tremoveMovedCard() {\n\t\tthis.setState({movedCard: null});\n\t}\n\n\tstartGame() {\n\t\tconst { playersNumber } = this.state;\n\t\tthis.gameState = new GameState();\n\t\tthis.unsubscribe = this.addObserver();\n\t\tthis.setState({ \n\t\t\tisPlaying: true,\n\t\t\tplayers: this.genPlayers(playersNumber)\n\t\t});\n\n\t\tthis.gameState.initNewGame(playersNumber);\n\t\tthis.gameState.startGame();\n\t}\n\n\tmakeMove(cardId) {\n\t\tif (this.state.mode === 'single-player') {\n\t\t\tthis.gameState.makeUserMove(cardId);\n\t\t} else {\n\t\t\twebsocket.send({ type: 'move', data: { cardId } });\n\t\t}\n\t}\n\n\tpass() {\n\t\tif (this.state.mode === 'single-player') {\n\t\t\tthis.gameState.pass();\n\t\t} else {\n\t\t\twebsocket.send({ type: 'pass' });\n\t\t}\n\t}\n\n\tskip() {\n\t\twebsocket.send({ type: 'skip' });\n\t}\n\n\thandleStartTrick(prevState) {\n\t\tif (this.state.mode === 'multiplayer') return;\n\t\tconst prevAttacks = prevState.cards.table;\n\t\tconst currAttacks = this.state.cards.table;\n\t\tconst prevTrump = prevState.trumpSuit;\n\t\tconst currTrump = this.state.trumpSuit;\n\t\tconst tableGetEmpty = !!prevAttacks.length && !currAttacks.length;\n\t\tconst trumpHasChosen = !prevTrump && currTrump;\n\t\tif (tableGetEmpty || trumpHasChosen) this.gameState.startTrick();\n\t}\n\n\thandleShowButton(prevState) {\n\t\tconst { possibleCards: prevPossibleCards } = prevState;\n\t\tconst { possibleCards, cards: { table: attacks }, showButton } = this.state;\n\t\tif (possibleCards.length && attacks.length) {\n\t\t\tif (prevPossibleCards.length !== possibleCards.length && !showButton) {\n\t\t\t\tthis.setState({ showButton: true });\n\t\t\t}\n\t\t} else if (showButton) this.setState({ showButton: false });\n\t}\n\n\thandleEndGame(prevState) {\n\t\tif (prevState.isPlaying && !this.state.isPlaying) {\n\t\t\tif (this.state.mode === 'multiplayer') {\n\t\t\t\twebsocket.close();\n\t\t\t} else {\n\t\t\t\tthis.gameState = null;\n\t\t\t\tthis.unsubscribe();\n\t\t\t}\n\t\t}\n\t}\n\n\treduceTimer() {\n\t\tconst { timer } = this.state;\n\t\tthis.setState({timer: timer - 1 });\n\t\tif (timer === 1) this.skip();\n\t\telse this.timeout = setTimeout(this.reduceTimer, 1000);\n\t}\n\n\thandleTimerUpdate(prevState) {\n\t\tif (this.state.mode === 'multiplayer') {\n\t\t\tif (prevState.possibleCards.length !== this.state.possibleCards.length) {\n\t\t\t\tif (this.state.possibleCards.length) {\n\t\t\t\t\tthis.setState({timer: 10});\n\t\t\t\t\tif (this.timeout) clearTimeout(this.timeout);\n\t\t\t\t\tthis.timeout = setTimeout(this.reduceTimer, 1000);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({timer: null});\n\t\t\t\t\tif (this.timeout) clearTimeout(this.timeout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateViewport();\n\t\tthis.getUserSettings();\n\t\tthis.removeListener = this.addResizeListener();\n\t}\n\n\tcomponentDidUpdate(_, prevState) {\n\t\tthis.handleStartTrick(prevState);\n\t\tthis.handleShowButton(prevState);\n\t\tthis.handleEndGame(prevState);\n\t\tthis.handleTimerUpdate(prevState);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.removeListener) this.removeListener();\n\t\tif (this.unsubscribe) this.unsubscribe();\n\t}\n\n\trender() {\n\t\tconst field = helpers.getFieldProps(this.state.viewport);\n\t\treturn (\n\t\t\t<AppContext.Provider value={{\n\t\t\t\tcardStyles: this.cardStyles, \n\t\t\t\tpossibleCards: this.state.possibleCards, \n\t\t\t\ttrumpSuit: this.state.trumpSuit, \n\t\t\t\tmovedCard: this.state.movedCard,\n\t\t\t\tupdateCardStyles: this.updateCardStyles, \n\t\t\t\tmakeMove: this.makeMove,\n\t\t\t\taddMovedCard: this.addMovedCard,\n\t\t\t\tremoveMovedCard: this.removeMovedCard\n\t\t\t}}>\n\t\t\t\t<Menu \n\t\t\t\t\tisPlaying={this.state.isPlaying}\n\t\t\t\t\tusername={this.state.username}\n\t\t\t\t\tmode={this.state.mode} \n\t\t\t\t\tplayersNumber={this.state.playersNumber} \n\t\t\t\t\tchangeName={this.changeName}\n\t\t\t\t\tchangeMode={this.changeMode} \n\t\t\t\t\tchangePlayersNumber={this.changePlayersNumber}\n\t\t\t\t\tstartGame={this.startGame}\n\t\t\t\t\twaitUsers={this.waitUsers}\n\t\t\t\t\tsaveUserSettings={this.saveUserSettings}\n\t\t\t\t/>\n\t\t\t\t<WaitPage \n\t\t\t\t\tusername={this.state.username} \n\t\t\t\t\tplayersNumber={this.state.playersNumber} \n\t\t\t\t\tisPlaying={this.state.isPlaying}\n\t\t\t\t\tisWaiting={this.state.isWaiting}\n\t\t\t\t\tcancelWaiting={this.cancelWaiting}\n\t\t\t\t\tstartMultiplayGame={this.startMultiplayGame}\n\t\t\t\t/>\n\t\t\t\t<svg className=\"app\" >\n\t\t\t\t\t<g className=\"field\" width={field.width} height={field.height} style={field.style}>\n\t\t\t\t\t\t<Table field={field} />\n\t\t\t\t\t\t<Cards \n\t\t\t\t\t\t\tcards={this.state.cards} \n\t\t\t\t\t\t\tfield={field} \n\t\t\t\t\t\t\tplayers={this.state.players} \n\t\t\t\t\t\t\tuserIndex={this.state.userIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PassButton\n\t\t\t\t\t\t\tshow={this.state.showButton}\n\t\t\t\t\t\t\ttext={this.state.defender === this.state.userIndex ? 'Pick up' : 'Pass'}\n\t\t\t\t\t\t\tonClick={this.state.showButton ? this.pass : null}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Arrow \n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tdefenderIndex={this.state.defender} \n\t\t\t\t\t\t\tplayersCount={this.state.players.length} \n\t\t\t\t\t\t\tuserIndex={this.state.userIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Timer timer={this.state.timer} />\n\t\t\t\t\t</g>\n\t\t\t\t\t<Filters />\n\t\t\t\t</svg>\n\t\t\t</AppContext.Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// @TODO to learn about\nserviceWorker.unregister();\n"],"sourceRoot":""}