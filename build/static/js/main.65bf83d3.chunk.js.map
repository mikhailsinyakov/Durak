{"version":3,"sources":["websocket/index.js","context/AppContext.js","components/Menu.js","components/WaitPage.js","components/Table.js","components/TrumpSymbol.js","lib/gameConfig.js","components/Card.js","components/DeckCards.js","lib/helpers.js","components/PlayerCards.js","components/TableCards.js","components/DiscardedCards.js","components/Cards.js","components/PassButton.js","components/Arrow.js","components/Timer.js","components/Filters.js","lib/GameState.js","lib/delayed-functions.js","components/App.js","serviceWorker.js","index.js"],"names":["websocketUrl","window","location","hostname","websocket","client","connect","this","w3cwebsocket","listen","fn","onclose","onerror","error","onmessage","message","JSON","parse","data","send","messageObject","_this","stringify","readyState","OPEN","onopen","close","AppContext","React","createContext","MenuItemOption","props","changeItem","currOption","option","optionText","react_default","a","createElement","className","concat","onClick","e","preventDefault","style","cursor","Menu","field","username","mode","playersNumber","changeName","changeMode","isPlaying","changePlayersNumber","startGame","waitUsers","saveUserSettings","input","createRef","handleInputChange","value","target","current","placeholder","toUpperCase","slice","handleSubmit","lang","width","playerSpace","height","context_AppContext","Consumer","_ref","ref","type","onChange","Menu_MenuItemOption","WaitPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","joinedUsers","userConfirms","allUsersConfirm","cancel","bind","assertThisInitialized","confirm","setState","startMultiplayGame","cancelWaiting","_this2","msgObj","updateJoinedUsers","groupSize","prevProps","isWaiting","connectToWebsocket","_this$props","_this$state","context","src","Array","from","length","map","user","i","key","Component","contextType","Table","cx","cy","r","TrumpSymbol","placeCenter","cardSize","coords","x","y","_ref2","trumpSuit","href","transform","config","maxCardsAfterDealing","maxAttacks","Card","imageElement","id","rotation","side","activePlayer","_this$context","possibleCards","makeMove","cardStyles","updateCardStyles","movedCard","addMovedCard","removeMovedCard","gameConfig","translate","rotate","cardStyle","newStyle","transformOrigin","darker","includes","applyStyle","elem","transition","filter","changeStyles","requestAnimationFrame","setTimeout","onMouseOver","onMouseLeave","DeckCards","cards","react","card","shift","trump","objectSpread","components_Card","assign","components_TrumpSymbol","toRadian","angle","Math","PI","findRightTriangleSides","hypotenuse","cos","sin","getDeepCopy","obj","isArray","newArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","slicedToArray","err","return","newObj","prop","PlayerCards","players","playerCardsPosition","userIndex","allCards","playerIndex","_playerCardsPosition$","objectWithoutProperties","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_ref5","cardIndex","oneCardShift","relativeToPlaceCenter","helpers","push","TableCards","attacks","_ref4","attackIndex","attack","_ref7","attacking","DiscardedCards","Cards","placeCenters","deck","table","discarded","components_DeckCards","components_PlayerCards","fromCenterToPlayerCards","_","relativeToCenterCoords","findPlayerCardsPosition","components_TableCards","components_DiscardedCards","PassButton","show","text","pass","opacity","Arrow","defenderIndex","playersCount","fromCenter","relativeToCenter","points","Timer","timer","Filters","values","GameState","attacker","defender","defendSucceed","activePlayers","observable","subscriber","subscribe","update","updates","deckCards","shuffleCards","genCards","playerCards","ranks","suits","n","rank","suit","cardsCopy","j","floor","random","tmp","dealCards","chooseTrump","clearGameProps","dealerIndex","getNextIndex","index","dealOneCard","randomIndex","sortPlayerCards","pop","isTrump","sort","b","card1","card2","getNumberOfActivePlayers","endGame","updateActivePlayers","updateAttackerAndDefender","updateMaxAttacks","sendPossibleCardsToUser","decision","makeDecision","updateActivePlayerTimers","playerObject","rejected","gameState","isPlayerInGame","nextIndex","indexes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","playersDontHaveTimers","userPass","defineAttackerAndDefenderByLowestTrump","minTrump","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","min","findPossibleCards","findCardsForDefend","findCardsForAttack","tableCards","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","apply","toConsumableArray","tableCardRanks","_this3","notBeatenAttacks","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_loop","attackCard","getHigherCard","forEach","_iterator7","isDefender","isAttackRequired","cardsInDeck","unbeatenCards","cardId","getCardById","addCardToTable","playerCard","defendCard","_this4","attackIndexes","place","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_this5","isUserInGame","userHasNoPossibleCards","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_loop2","randomTime","_playerObject$rejecte","_iterator10","endTrick","reduce","bool","clearTable","drawCardsFromDeck","_this6","discardedCards","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_this7","playersDrawnCards","changePlayers","newCards","playerHasCards","cardsNeeded","lastDeckCard","loser","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_ref9","_ref8","delayed_functions","functions","delaying","add","run","App","viewport","showButton","timeout","handleStateUpdate","updateViewport","reduceTimer","settingsString","localStorage","getItem","settings","setItem","name","number","delayedFunctions","defineProperty","html","document","documentElement","clientWidth","clientHeight","throttled","addEventListener","removeEventListener","updateObject","unsubscribe","addObserver","genPlayers","initNewGame","makeUserMove","prevState","prevAttacks","currAttacks","prevTrump","currTrump","startTrick","prevPossibleCards","_this$state2","skip","clearTimeout","getUserSettings","removeListener","addResizeListener","handleStartTrick","handleShowButton","handleEndGame","handleTimerUpdate","svg","aspectRatio","scale","Provider","components_Menu","components_WaitPage","components_Table","components_Cards","components_PassButton","components_Arrow","components_Timer","components_Filters","Boolean","match","pathname","title","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0YACMA,EAA4C,cAA7BC,OAAOC,SAASC,SACnC,sBACA,iCA+BaC,EA7BG,CAChBC,OAAQ,KACRC,QAFgB,WAGTC,KAAKF,SACRE,KAAKF,OAAS,IAAIG,eAAaR,EAAc,mBAGjDS,OAPgB,SAOTC,GACLH,KAAKF,OAAOM,QAAU,kBAAMD,EAAG,WAC/BH,KAAKF,OAAOO,QAAU,SAAAC,GAAK,OAAIH,EAAG,QAASG,IAC3CN,KAAKF,OAAOS,UAAY,SAAAC,GAAO,OAC7BL,EAAG,UAAWM,KAAKC,MAAMF,EAAQG,SAErCC,KAbgB,SAaXC,GAAe,IAAAC,EAAAd,KACZQ,EAAUC,KAAKM,UAAUF,GAC3Bb,KAAKF,OAAOkB,aAAehB,KAAKF,OAAOmB,KACzCjB,KAAKF,OAAOc,KAAKJ,GAEjBR,KAAKF,OAAOoB,OAAS,kBAAMJ,EAAKhB,OAAOc,KAAKJ,KAGhDW,MArBgB,WAsBVnB,KAAKF,SACPE,KAAKF,OAAOqB,QACZnB,KAAKF,OAAS,QCzBLsB,EAFIC,IAAMC,gBCEnBC,SAAiB,SAAAC,GAAS,IACtBC,EAA+CD,EAA/CC,WAAYC,EAAmCF,EAAnCE,WAAYC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,WACxC,OACEC,EAAAC,EAAAC,cAAA,QACEC,UAAS,oBAAAC,OAAsBP,IAAeC,EAAS,UAAY,IACnEO,QAASR,IAAeC,EACtB,SAAAQ,GACEA,EAAEC,iBACFX,EAAWE,IAEX,KACJU,MAAO,CAAEC,OAAQZ,IAAeC,EAAS,UAAY,YAEpDC,KAuGQW,EAlGF,SAAAf,GAAS,IACZgB,EACgEhB,EADhEgB,MAAOC,EACyDjB,EADzDiB,SAAUC,EAC+ClB,EAD/CkB,KAAMC,EACyCnB,EADzCmB,cAAeC,EAC0BpB,EAD1BoB,WAAYC,EACcrB,EADdqB,WAAYC,EACEtB,EADFsB,UAC9DC,EAAgEvB,EAAhEuB,oBAAqBC,EAA2CxB,EAA3CwB,UAAWC,EAAgCzB,EAAhCyB,UAAWC,EAAqB1B,EAArB0B,iBAE7CC,EAAQ9B,IAAM+B,YAEdC,EAAoB,SAAAlB,GAAK,IACvBmB,EAAUnB,EAAEoB,OAAZD,MACFH,EAAMK,QAAQC,cAAaN,EAAMK,QAAQC,YAAc,IACvDH,IAAOA,EAAQA,EAAM,GAAGI,cAAgBJ,EAAMK,MAAM,IACxDf,EAAWU,IAIPM,EAAe,SAAAC,GACdpB,EAIQ,kBAATC,GACFQ,IACAF,MAEAE,IACAD,KARAE,EAAMK,QAAQC,YAAuB,OAATI,EAAgB,gEAAe,yBAYzDxB,EAAQ,CACZyB,MAAOtB,EAAMsB,MAA4B,EAApBtB,EAAMuB,YAAkB,KAC7CC,OAAQxB,EAAMsB,MAA4B,EAApBtB,EAAMuB,YAAkB,MAGhD,OACElC,EAAAC,EAAAC,cAACkC,EAAWC,SAAZ,KACI,SAAAC,GAAA,IAAEN,EAAFM,EAAEN,KAAF,OACAhC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,QAAAC,OAAUa,EAAY,OAAS,IAAMT,MAAOA,GACxDR,EAAAC,EAAAC,cAAA,UAAc,OAAT8B,EAAgB,2BAAS,QAC9BhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACJ,OAAT6B,EAAgB,sBAAS,SAE5BhC,EAAAC,EAAAC,cAAA,SAAOqC,IAAKjB,EAAOkB,KAAK,OAAOf,MAAOb,EAAU6B,SAAUjB,KAE5DxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACJ,OAAT6B,EAAgB,kCAAW,SAE9BhC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYoB,EAAYnB,WAAYgB,EACpCf,OAAO,gBACPC,WAAqB,OAATiC,EAAgB,2BAAS,kBAEvChC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYoB,EAAYnB,WAAYgB,EACpCf,OAAO,cACPC,WAAqB,OAATiC,EAAgB,0DAAe,iBAG/ChC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACJ,OAAT6B,EAAgB,8CAAa,YAEhChC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYsB,EAAqBrB,WAAYiB,EAC7ChB,OAAQ,EAAGC,WAAW,MAExBC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYsB,EAAqBrB,WAAYiB,EAC7ChB,OAAQ,EAAGC,WAAW,MAExBC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYsB,EAAqBrB,WAAYiB,EAC7ChB,OAAQ,EAAGC,WAAW,MAExBC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYsB,EAAqBrB,WAAYiB,EAC7ChB,OAAQ,EAAGC,WAAW,MAExBC,EAAAC,EAAAC,cAACwC,EAAD,CACE9C,WAAYsB,EAAqBrB,WAAYiB,EAC7ChB,OAAQ,EAAGC,WAAW,QAI5BC,EAAAC,EAAAC,cAAA,UAAQG,QAAS0B,GACL,kBAATlB,EACU,OAATmB,EAAgB,uCAAW,OAClB,OAATA,EAAgB,iHAAyB,sBC1GjDW,qBACJ,SAAAA,EAAYhD,GAAO,IAAAV,EAAA,OAAA2D,OAAAC,EAAA,EAAAD,CAAAzE,KAAAwE,IACjB1D,EAAA2D,OAAAE,EAAA,EAAAF,CAAAzE,KAAAyE,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7E,KAAMwB,KACDsD,MAAQ,CACXC,YAAa,GACbC,cAAc,EACdC,iBAAiB,GAGnBnE,EAAKoE,OAASpE,EAAKoE,OAAOC,KAAZV,OAAAW,EAAA,EAAAX,CAAA3D,IACdA,EAAKuE,QAAUvE,EAAKuE,QAAQF,KAAbV,OAAAW,EAAA,EAAAX,CAAA3D,IATEA,iFAYDiE,GAChB/E,KAAKsF,SAAS,CAAEP,kDAIhB/E,KAAKsF,SAAS,CAAEN,cAAc,IAC9BnF,EAAUe,KAAK,CAAEyD,KAAM,sDAIvBrE,KAAKwB,MAAM+D,sDAIXvF,KAAKwB,MAAMgE,gBACX3F,EAAUsB,qDAGS,IAAAsE,EAAAzF,KACnBH,EAAUE,UACVF,EAAUK,OAAO,SAACmE,EAAMqB,GACT,YAATrB,IACkB,gBAAhBqB,EAAOrB,MAAwBoB,EAAKE,kBAAkBD,EAAO/E,KAAKoE,aAClD,oBAAhBW,EAAOrB,MAA4BoB,EAAKR,mBAEjC,WAATZ,GAAmBoB,EAAKP,WAE9BrF,EAAUe,KAAK,CACbyD,KAAM,UACN5B,SAAUzC,KAAKwB,MAAMiB,SACrBmD,UAAW5F,KAAKwB,MAAMmB,2DAIPkD,GACZA,EAAUC,WAAcD,EAAU/C,YAAa9C,KAAKwB,MAAMsE,YAC7D9F,KAAK+F,qBACL/F,KAAKsF,SAAS,CAAEP,YAAa,GAAIC,cAAc,EAAOC,iBAAiB,sCAIlE,IAAAe,EACqChG,KAAKwB,MAAzCgB,EADDwD,EACCxD,MAAOsD,EADRE,EACQF,UAAWnD,EADnBqD,EACmBrD,cADnBsD,EAE+BjG,KAAK8E,MAAnCC,EAFDkB,EAEClB,YAAaC,EAFdiB,EAEcjB,aACbnB,EAAS7D,KAAKkG,QAAdrC,KACFxB,EAAQ,CACZyB,MAAOtB,EAAMsB,MAA4B,EAApBtB,EAAMuB,YAAkB,KAC7CC,OAAQxB,EAAMsB,MAA4B,EAApBtB,EAAMuB,YAAkB,MAGhD,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,aAAAC,OAAgB6D,EAAqB,GAAT,QAAezD,MAAOA,GAC9DR,EAAAC,EAAAC,cAAA,UAAc,OAAT8B,EAAgB,8FAAqB,kBAC1ChC,EAAAC,EAAAC,cAAA,OAAKoE,IAAI,wBACTtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZoE,MAAMC,KAAK,CAACC,OAAQ3D,IAClB4D,IAAI,SAACC,EAAMC,GAAP,OACH5E,EAAAC,EAAAC,cAAA,OACEC,UAAS,cAAAC,OAAgB8C,EAAY0B,IAAM1B,EAAY0B,GAAGpB,QACxD,UAAY,IACdqB,IAAKD,GACJ1B,EAAY0B,GAAK1B,EAAY0B,GAAGhE,SAAW,OAIpDZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBE,QAASlC,KAAKkF,QACpC,OAATrB,EAAgB,uCAAW,UAG5BkB,EAAYuB,SAAW3D,IAAkBqC,GACzCnD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,QAASlC,KAAKqF,SACrC,OAATxB,EAAgB,qEAAgB,oBArFxB8C,cA6FvBnC,EAASoC,YAAcxF,EAERoD,QCxFAqC,SATD,SAAA1C,GAAa,IAAX3B,EAAW2B,EAAX3B,MACRH,EAAQ,CACZyE,GAAItE,EAAMsB,MAAQ,EAAI,KACtBiD,GAAIvE,EAAMwB,OAAS,EAAI,KACvBgD,GAAIxE,EAAMsB,MAA4B,EAApBtB,EAAMuB,aAAmB,EAAI,MAEjD,OAAOlC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQK,MAAOA,MC2B3B4E,EAjCK,SAAA9C,GAAqB,IAAlB+C,EAAkB/C,EAAlB+C,YACfC,EACG,GADHA,EAEI,MAGJC,EAAS,CACbC,EAAGH,EAAYG,EAAIF,EAAiB,EACpCG,EAAGJ,EAAYI,EAAIH,EAAkB,GAGvC,OACEtF,EAAAC,EAAAC,cAACkC,EAAWC,SAAZ,KAEI,SAAAqD,GAAiB,IAAfC,EAAeD,EAAfC,UACA,OAAIA,EAEA3F,EAAAC,EAAAC,cAAA,SACEsF,EAAG,EACHC,EAAG,EACHxD,MAAOqD,EACPnD,OAAQmD,EACRM,KAAI,sBAAAxF,OAAwBuF,EAAxB,QACJnF,MAAO,CAACqF,UAAS,aAAAzF,OAAemF,EAAOC,EAAtB,QAAApF,OAA8BmF,EAAOE,EAArC,UAGT,QCpBTK,EATA,CACbR,SAAU,CACRrD,MAAO,GACPE,OAAQ,OAEV4D,qBAAsB,EACtBC,WAAY,GCFRC,cACJ,SAAAA,EAAYtG,GAAO,IAAAV,EAAA,OAAA2D,OAAAC,EAAA,EAAAD,CAAAzE,KAAA8H,IACjBhH,EAAA2D,OAAAE,EAAA,EAAAF,CAAAzE,KAAAyE,OAAAG,EAAA,EAAAH,CAAAqD,GAAAjD,KAAA7E,KAAMwB,KACDuG,aAAe1G,IAAM+B,YAFTtC,wEAKV,IAAAkF,EAC8ChG,KAAKwB,MAAlDwG,EADDhC,EACCgC,GAAIC,EADLjC,EACKiC,SAAUb,EADfpB,EACeoB,OAAQc,EADvBlC,EACuBkC,KAAMC,EAD7BnC,EAC6BmC,aAD7BC,EAGgEpI,KAAKkG,QADpEmC,EAFDD,EAECC,cAAeC,EAFhBF,EAEgBE,SAAUC,EAF1BH,EAE0BG,WACzBC,EAHDJ,EAGCI,iBAAkBC,EAHnBL,EAGmBK,UAAWC,EAH9BN,EAG8BM,aAAcC,EAH5CP,EAG4CO,gBAC3CZ,EAAiB/H,KAAjB+H,aACAZ,EAAayB,EAAbzB,SAEFE,EAAID,EAAOC,EAAIF,EAASrD,MAAQ,EAClCwD,EAAIF,EAAOE,EAAIH,EAASnD,OAAS,EACjCmE,GAAgBM,IAAcT,IAAIV,GAAK,IAC3C,IAAMuB,EAAS,aAAA5G,OAAgBoF,EAAhB,QAAApF,OAAwBqF,EAAxB,OACTwB,EAAM,UAAA7G,OAAagG,EAAWA,EAAW,MAAQ,OAA3C,KACNc,EAAYR,EAAaA,EAAWP,GAAM,KAC1CgB,EAAW,CACfC,gBAAe,GAAAhH,OAAKmF,EAAOC,EAAZ,OAAApF,OAAmBmF,EAAOE,EAA1B,MACfI,UAAS,GAAAzF,OAAK6G,EAAL,KAAA7G,OAAe4G,IAGpBK,EAASf,IAAiBE,EAAcc,SAASnB,GAEjDoB,EAAa,SAACC,EAAMhH,EAAOiH,GAC/BD,EAAKhH,MAAMqF,UAAYrF,EAAMqF,UAC7B2B,EAAKhH,MAAM4G,gBAAkB5G,EAAM4G,gBACnCI,EAAKhH,MAAMiH,WAAaA,EAAa,OAAS,KAC9CD,EAAKhH,MAAMC,OAAS6F,IAAiBe,EAAS,UAAY,OAC1DG,EAAKhH,MAAMkH,OAASL,EAAS,iBAAmB,SAIlD,SAAUM,IACR9J,OAAO+J,sBAAsB,WAC3B,IAAMJ,EAAOtB,EAAavE,QACrB6F,EAECN,GACFK,EAAWC,EAAMN,GAAW,GAC5BrJ,OAAO+J,sBAAsB,WAC3BL,EAAWC,EAAML,GAAU,GAC3BR,EAAiBR,EAAIgB,OAGvBI,EAAWC,EAAML,GAAU,GAC3BR,EAAiBR,EAAIgB,IAVdQ,MAHf,GAkCA,OACE3H,EAAAC,EAAAC,cAAA,SACEqC,IAAKpE,KAAK+H,aACVV,EAAG,EACHC,EAAG,EACHxD,MAAOqD,EAASrD,MAChBE,OAAQmD,EAASnD,OACjByD,KAAe,UAATS,EAAA,iBAAAjG,OACa+F,EADb,iCAINA,GAAIA,EACJhG,UAAU,OACVE,QApBY,WACViG,IAAiBe,IACnBZ,EAASN,GACLS,IAAcT,GAAI0B,WAAWf,EAAiB,OAkBlDgB,YA7Be,WACZlB,IAAaN,GAAiBe,GAAQR,EAAaV,IA6BtD4B,aA1BiB,WACfnB,IAAcT,GAAIW,cA3DThC,aA0FnBmB,EAAKlB,YAAcxF,EAEJ0G,QC5DA+B,EAhCG,SAAArI,GAAS,IACjBsI,EAAuBtI,EAAvBsI,MAAO5C,EAAgB1F,EAAhB0F,YAoBf,OACErF,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KAEID,EAAMxD,OACJwD,EAAMvD,IAtBG,SAACyD,EAAMvD,GACtB,IAAMwD,EACG,GAAJxD,GAAWuD,EAAKE,OAAS,GAAK,GAD7BD,EAEI,IAAJxD,GAAWuD,EAAKE,MAAQ,GAAK,GAE7B9C,EAAS,CACbC,EAAGH,EAAYG,EAAI4C,EACnB3C,EAAGJ,EAAYI,EAAI2C,GAEfhC,EAAW+B,EAAKE,MAAQ,GAAK,EACnC,OAAOzF,OAAA0F,EAAA,EAAA1F,CAAA,GACFuF,EADL,CAEE5C,SACAa,WACAC,KAAM8B,EAAKE,MAAQ,QAAU,WAQL3D,IAAI,SAAAyD,GAAI,OAAInI,EAAAC,EAAAC,cAACqI,EAAD3F,OAAA4F,OAAA,GAAUL,EAAV,CAAgBtD,IAAKsD,EAAKhC,QAC1DnG,EAAAC,EAAAC,cAACuI,EAAD,CAAapD,YAAaA,qBC9B9BqD,EAAW,SAAAC,GAAK,OAAIA,EAAQC,KAAKC,GAAK,KAE/BC,EAAyB,SAACH,EAAOI,GAC5C,MAAO,CACLvD,EAAGoD,KAAKI,IAAIN,EAASC,IAAUI,EAC/BtD,EAAGmD,KAAKK,IAAIP,EAASC,IAAUI,IAItBG,EAAc,SAAdA,EAAcC,GACzB,IAAMC,EAAUD,aAAe5E,MAE/B,IAAK6E,KADwB,kBAARD,IAAqBC,GAClB,OAAOD,EAC/B,GAAIC,EAAS,CACX,IAAMC,EAAW,GADNC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEX,QAAAC,EAAAC,EAAwBR,EAAIS,UAA5BC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAuC,KAAAW,EAAAP,EAAAjI,MAAAiE,EAAA9C,OAAAsH,EAAA,EAAAtH,CAAAqH,EAAA,GAA3BrF,EAA2Bc,EAAA,GAAxB8B,EAAwB9B,EAAA,GACrC2D,EAASzE,GAAKsE,EAAY1B,IAHjB,MAAA2C,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAKX,OAAOH,EAGT,IAAMgB,EAAS,GACf,IAAK,IAAMC,KAAQnB,EACjBkB,EAAOC,GAAQpB,EAAYC,EAAImB,IAEjC,OAAOD,GCcME,EAnCK,SAAA5K,GAAS,IACnB6K,EAA4C7K,EAA5C6K,QAASC,EAAmC9K,EAAnC8K,oBAAqBC,EAAc/K,EAAd+K,UAChCC,EAAW,GAFUrB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAI3B,QAAAC,EAAAC,EAAmCa,EAAQZ,UAA3CC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAsD,KAAAW,EAAAP,EAAAjI,MAAAiE,EAAA9C,OAAAsH,EAAA,EAAAtH,CAAAqH,EAAA,GAA1CW,EAA0ClF,EAAA,GAA7BuC,EAA6BvC,EAAA,GAAAmF,EAClBJ,EAAoBG,GAA9CjC,EAD4CkC,EAC5ClC,MAAUtD,EADkCzC,OAAAkI,EAAA,EAAAlI,CAAAiI,EAAA,WAAAE,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IAEpD,QAAAyB,EAAAC,EAAgClD,EAAM2B,UAAtCC,OAAAC,cAAAiB,GAAAG,EAAAC,EAAApB,QAAAC,MAAAe,GAAA,EAAiD,KAAAK,EAAAF,EAAAzJ,MAAA4J,EAAAzI,OAAAsH,EAAA,EAAAtH,CAAAwI,EAAA,GAArCE,EAAqCD,EAAA,GAA1BlD,EAA0BkD,EAAA,GACzCE,EAAeX,IAAgBF,EAAY,GAAK,EAChDtC,GAASkD,GAAarD,EAAMxD,OAAS,GAAK,GAAK8G,EAC/CC,EAAwBC,EAC5B9C,EACAP,GAEI7C,EAAS,CACbC,EAAGH,EAAYG,EAAIgG,EAAsBhG,EACzCC,EAAGJ,EAAYI,EAAI+F,EAAsB/F,GAG3CkF,EAASe,KAAT9I,OAAA0F,EAAA,EAAA1F,CAAA,GACKuF,EADL,CAEE/B,SAAUuC,EACVpD,SACAc,KAAMuE,IAAgBF,EAAY,QAAU,OAC5CpE,aAAcsE,IAAgBF,MAnBkB,MAAAP,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,KAJ3B,MAAAd,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GA4B3B,OACExJ,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KACGyC,EAASjG,IAAI,SAAAyD,GAAI,OAAKnI,EAAAC,EAAAC,cAACqI,EAAD3F,OAAA4F,OAAA,GAAWL,EAAX,CAAkBtD,IAAKsD,EAAKhC,UCY1CwF,EA3CI,SAAArJ,GAA8B,IAA3BsJ,EAA2BtJ,EAA3BsJ,QAASvG,EAAkB/C,EAAlB+C,YACvBsF,EAAW,GAD8BrB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE/C,QAAAC,EAAAC,EAAoCiC,EAAQhC,UAA5CC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAuD,KAAAuC,EAAAnC,EAAAjI,MAAAwI,EAAArH,OAAAsH,EAAA,EAAAtH,CAAAiJ,EAAA,GAA3CC,EAA2C7B,EAAA,GAA9B8B,EAA8B9B,EAAA,GAAAc,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IACrD,QAAAyB,EAAAC,EAAgCY,EAAOnC,UAAvCC,OAAAC,cAAAiB,GAAAG,EAAAC,EAAApB,QAAAC,MAAAe,GAAA,EAAkD,KAAAiB,EAAAd,EAAAzJ,MAAA2J,EAAAxI,OAAAsH,EAAA,EAAAtH,CAAAoJ,EAAA,GAAtCV,EAAsCF,EAAA,GAA3BjD,EAA2BiD,EAAA,GAC1Ca,EAA0B,IAAdX,EACZlD,EAAQ,GACVwD,EAAQnH,OAAS,EACfqH,EAAc,GAChB1D,EAAM5C,EAAIsG,EAAc,GAAKF,EAAQnH,OAAS,GAAK,EACnD2D,EAAM3C,EAAI,IAEV2C,EAAM5C,EAAIsG,EAAc,EACxB1D,EAAM3C,GAAK,IAGb2C,EAAM5C,EAAIsG,GAAeF,EAAQnH,OAAS,GAAK,EAC/C2D,EAAM3C,EAAI,GAGPwG,IACH7D,EAAM5C,GAAK,IACX4C,EAAM3C,GAAK,IAGb2C,EAAM5C,EAAc,GAAV4C,EAAM5C,EAChB4C,EAAM3C,EAAc,GAAV2C,EAAM3C,EAEhB,IAAMF,EAAS,CACbC,EAAGH,EAAYG,EAAI4C,EAAM5C,EACzBC,EAAGJ,EAAYI,EAAI2C,EAAM3C,GAG3BkF,EAASe,KAAT9I,OAAA0F,EAAA,EAAA1F,CAAA,GAAmBuF,EAAnB,CAAyB5C,SAAQc,KAAM,YA9BY,MAAA8D,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,KAFR,MAAAd,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAoC/C,OACExJ,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KACGyC,EAASjG,IAAI,SAAAyD,GAAI,OAAInI,EAAAC,EAAAC,cAACqI,EAAD3F,OAAA4F,OAAA,GAAWL,EAAX,CAAkBtD,IAAKsD,EAAKhC,UC9BzC+F,EARQ,SAAA5J,GAAA,IAAG2F,EAAH3F,EAAG2F,MAAO5C,EAAV/C,EAAU+C,YAAV,OACrBrF,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KACGD,EAAMvD,IAAI,SAAAyD,GAAI,OACbnI,EAAAC,EAAAC,cAACqI,EAAD3F,OAAA4F,OAAA,GAAUL,EAAV,CAAgBtD,IAAKsD,EAAKhC,GAAIZ,OAAM3C,OAAA0F,EAAA,EAAA1F,CAAA,GAAOyC,GAAegB,KAAM,cCqDvD8F,EApDD,SAAAxM,GAAS,IACbsI,EAAqCtI,EAArCsI,MAAOtH,EAA8BhB,EAA9BgB,MAAO6J,EAAuB7K,EAAvB6K,QAASE,EAAc/K,EAAd+K,UAsBzB0B,EAAe,CACnBC,KAAM,CACJ7G,EAAiB,IAAd7E,EAAMsB,MACTwD,EAAkB,GAAf9E,EAAMwB,QAEXmK,MAAO,CACL9G,EAAiB,IAAd7E,EAAMsB,MACTwD,EAAkB,IAAf9E,EAAMwB,QAEXoK,UAAW,CACT/G,EAAiB,IAAd7E,EAAMsB,MACTwD,EAAkB,GAAf9E,EAAMwB,SAIb,OACEnC,EAAAC,EAAAC,cAACgI,EAAA,SAAD,KACElI,EAAAC,EAAAC,cAACsM,EAAD,CAAWvE,MAAOA,EAAMoE,KAAMhH,YAAa+G,EAAaC,OACxDrM,EAAAC,EAAAC,cAACuM,EAAD,CACEjC,QAASvC,EAAMuC,QACfC,oBAzC0B,WAC9B,IACMiC,GADW/L,EAAMsB,MAAQtB,EAAMwB,QAAU,EACL,EAAIxB,EAAMuB,YAAc,EAElE,OAAOqC,MAAMC,KACX,CAAEC,OAAQ+F,EAAQ/F,QAClB,SAACkI,EAAG/H,GACF,IAAM+D,EAA0B,KAAjB/D,EAAI8F,GAAmBF,EAAQ/F,OACxCmI,EAAyBnB,EAC7B9C,EAAQ,GACR+D,GAEF,MAAO,CACL/D,QACAnD,EAAG7E,EAAMsB,MAAQ,EAAI2K,EAAuBpH,EAC5CC,EAAG9E,EAAMwB,OAAS,EAAIyK,EAAuBnH,KA0B1BoH,GACrBnC,UAAWA,IAEb1K,EAAAC,EAAAC,cAAC4M,EAAD,CAAYlB,QAAS3D,EAAMqE,MAAOjH,YAAa+G,EAAaE,QAC5DtM,EAAAC,EAAAC,cAAC6M,EAAD,CAAgB9E,MAAOA,EAAMsE,UAAWlH,YAAa+G,EAAaG,cC9BzDS,SArBI,SAAA1K,GAAwB,IAAtB2K,EAAsB3K,EAAtB2K,KAAMC,EAAgB5K,EAAhB4K,KAAMC,EAAU7K,EAAV6K,KACzB3M,EAAQ,CACZ4M,QAASH,EAAO,EAAI,EACpBxM,OAAQwM,EAAO,UAAY,WAG7B,OACEjN,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVK,MAAOA,EACPH,QAAS,SAAAC,GACPA,EAAEC,iBACF4M,MAGFnN,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,YAAOgN,MCMEG,SArBD,SAAA/K,GAAqD,IAAnD3B,EAAmD2B,EAAnD3B,MAAO2M,EAA4ChL,EAA5CgL,cAAeC,EAA6BjL,EAA7BiL,aAAc7C,EAAepI,EAAfoI,UACnD,GAAsB,OAAlB4C,EAAwB,OAAO,KACnC,IAAM3E,EAAsC,KAA7B2E,EAAgB5C,GAAmB6C,EAC5CC,GAAc7M,EAAMsB,MAA4B,EAApBtB,EAAMuB,aAAmB,EAAI,GACzDuL,EAAmBhC,EACxB9C,EAAQ,GACR6E,GAEKhI,EAAI7E,EAAMsB,MAAQ,EAAIwL,EAAiBjI,EACvCC,EAAI9E,EAAMwB,OAAS,EAAIsL,EAAiBhI,EAExCjF,EAAQ,CACbqF,UAAS,UAAAzF,OAAYuI,EAAZ,mBAAAvI,OAAmCoF,EAAnC,QAAApF,OAA2CqF,EAA3C,OACT2B,gBAAe,GAAAhH,OAAKoF,EAAL,OAAApF,OAAYqF,EAAZ,OAGhB,OACCzF,EAAAC,EAAAC,cAAA,WAASC,UAAU,QAAQuN,OAAO,iBAAiBlI,EAAG,EAAGC,EAAG,EAAGjF,MAAOA,MCNzDmN,SAZD,SAAArL,GAAe,IAAZsL,EAAYtL,EAAZsL,MACf,OAAc,OAAVA,EAAuB,KAGzB5N,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SACXH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,YAAO0N,MCQEC,EAfC,WACd,OACE7N,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQiG,GAAG,UACTnG,EAAAC,EAAAC,cAAA,iBACEsC,KAAK,SACLsL,OAAO,wFC8fFC,aAlgBb,SAAAA,EAAYlN,GAAO+B,OAAAC,EAAA,EAAAD,CAAAzE,KAAA4P,GACjB5P,KAAK8J,MAAQ,CACXoE,KAAM,GACN7B,QAAS,GACT8B,MAAO,GACPC,UAAW,IAEbpO,KAAKuM,UAAY,EACjBvM,KAAKwH,UAAY,KACjBxH,KAAK6P,SAAW,KAChB7P,KAAK8P,SAAW,KAChB9P,KAAK+P,cAAgB,KACrB/P,KAAKgQ,cAAgB,CACnB3D,QAAS,IAEXrM,KAAK6H,WAAa,EAClB7H,KAAKiQ,WAAa,CAChBC,WAAY,KACZC,UAFgB,SAENhQ,GAAI,IAAAW,EAAAd,KAEZ,OADAA,KAAKkQ,WAAa/P,EACX,kBAAMW,EAAKoP,WAAa,OAEjCE,OANgB,SAMTC,GACLrQ,KAAKkQ,WAAWG,6DAIV1N,GACV,IAAM2N,EAAYtQ,KAAKuQ,aAAavQ,KAAKwQ,YACnCC,EAAcrK,MAAMC,KAAK,CAACC,OAAQ3D,GAAgB,iBAAO,KAC/D3C,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEoE,KAAMoC,EACNjE,QAASoE,IAEXzQ,KAAKiQ,WAAWG,OAAO,CAAC,CAAEjE,KAAM,QAAS7I,MAAOtD,KAAK8J,4CAWrD,IARA,IAAM4G,EAAQ,CACZ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAEzDf,EAAS,CACb,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAEpCgB,EAAQ,CAAC,QAAS,WAAY,SAAU,UACxC7G,EAAQ,GACLrD,EAAI,EAAGA,EAAIiK,EAAMpK,OAAQG,IAChC,IAAK,IAAImK,EAAI,EAAGA,EAAID,EAAMrK,OAAQsK,IAChC9G,EAAMyD,KAAK,CACTvF,GAAE,GAAA/F,OAAKyO,EAAMjK,GAAX,KAAAxE,OAAiB0O,EAAMC,IACzBC,KAAMH,EAAMjK,GACZqK,KAAMH,EAAMC,GACZtN,MAAOqM,EAAOlJ,KAKpB,OAAOqD,uCAEIA,GAGX,IAFA,IAAMiH,EAAYzD,EAAoBxD,GAE7BrD,EAAIsK,EAAUzK,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC7C,IAAMuK,EAAIvG,KAAKwG,MAAMxG,KAAKyG,UAAYzK,EAAI,IACpC0K,EAAM7D,EAAoByD,EAAUtK,IAC1CsK,EAAUtK,GAAK6G,EAAoByD,EAAUC,IAC7CD,EAAUC,GAAK1D,EAAoB6D,GAGrC,OAAOJ,sCAGP/Q,KAAKoR,YACLpR,KAAKqR,cACLrR,KAAKsR,qDAOL,IAJA,IAAMC,EAAcvR,KAAKuM,UACnB5J,EAAgB3C,KAAK8J,MAAMuC,QAAQ/F,OACnCkL,EAAe,SAAAC,GAAK,OAAIA,EAAQ,IAAM9O,EAAgB,EAAI8O,EAAQ,GACpEA,EAAQD,EAAaD,GACnBvR,KAAK8J,MAAMuC,QAAQoF,GAAOnL,OAASqB,EAAOC,sBAC9C5H,KAAK0R,YAAYD,GACjBzR,KAAKiQ,WAAWG,OAAO,CAAC,CAAEjE,KAAM,QAAS7I,MAAOtD,KAAK8J,SACrD2H,EAAQD,EAAaC,yCAIvB,IAAMnB,EAAYhD,EAAoBtN,KAAK8J,MAAMoE,MAC3CyD,EAAclH,KAAKwG,MAAMxG,KAAKyG,SAAWZ,EAAUhK,QACnD0D,EAAOsG,EAAUqB,GACvBrB,EAAUqB,GAAerB,EAAU,GACnCA,EAAU,GAAV7L,OAAA0F,EAAA,EAAA1F,CAAA,GAAoBuF,EAApB,CAA0BE,OAAO,IACjClK,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEoE,KAAMoC,IAERtQ,KAAKwH,UAAYwC,EAAK8G,KACtB9Q,KAAK4R,kBACL5R,KAAKiQ,WAAWG,OAAO,CACrB,CAAEjE,KAAM,QAAS7I,MAAOtD,KAAK8J,OAC7B,CAAEqC,KAAM,YAAa7I,MAAOtD,KAAKwH,iDAGzBiF,GACV,IAAM6D,EAAYhD,EAAoBtN,KAAK8J,MAAMoE,MAC3CuC,EAAcnD,EAAoBtN,KAAK8J,MAAMuC,SAC7CrC,EAAOsG,EAAUuB,MACvBpB,EAAYhE,GAAac,KAAKvD,GAE9BhK,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEoE,KAAMoC,EACNjE,QAASoE,IAEXzQ,KAAK4R,4DAEW,IAAAnM,EAAAzF,KACV8R,EAAU,SAAA9H,GAAI,OAAIA,EAAK8G,OAASrL,EAAK+B,WAQrCiJ,EAAcnD,EAAoBtN,KAAK8J,MAAMuC,SATnClB,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAUhB,QAAAC,EAAAC,EAAoBiF,EAApB/E,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAiC,CAAAI,EAAAjI,MACzByO,KAAK,SAACjQ,EAAGkQ,GACb,OAViBC,EAUDnQ,EAVQoQ,EAULF,GAThBvM,EAAK+B,WACNsK,EAAQG,IAAUH,EAAQI,KACzBJ,EAAQG,KAAWH,EAAQI,GAOApQ,EAAEwB,MAAQ0O,EAAE1O,MACtCwO,EAAQhQ,KAAOgQ,EAAQE,GAAW,GACjCF,EAAQhQ,IAAMgQ,EAAQE,IAAY,EAChC,EAbS,IAACC,EAAOC,KAFZ,MAAAlG,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAmBhBrL,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEuC,QAASoE,6CAIXzQ,KAAK+P,cAAgB,0CAGrB,GAAI/P,KAAKmS,2BAA6B,EAAGnS,KAAKoS,eAK5C,GAHApS,KAAKqS,sBACLrS,KAAKsS,4BACLtS,KAAKuS,mBACDvS,KAAK6P,WAAa7P,KAAKuM,UAAWvM,KAAKwS,8BACtC,CACH,IAAMC,EAAWzS,KAAK0S,aAAa1S,KAAK6P,UACxC7P,KAAKsI,SAAStI,KAAK6P,SAAU4C,GAC7BzS,KAAK2S,+EAKT,OAAO3S,KAAK8J,MAAMuC,QAAQ9C,OAAO,SAAAO,GAAK,OAAIA,EAAMxD,SAAQA,qDAGxD,IAAM0J,EAAgB,GADFpD,GAAA,EAAAC,GAAA,EAAAC,OAAAxB,EAAA,IAEpB,QAAAyB,EAAAC,EAAmChN,KAAK8J,MAAMuC,QAAQZ,UAAtDC,OAAAC,cAAAiB,GAAAG,EAAAC,EAAApB,QAAAC,MAAAe,GAAA,EAAiE,KAAAd,EAAAiB,EAAAzJ,MAAAiE,EAAA9C,OAAAsH,EAAA,EAAAtH,CAAAqH,EAAA,GAArDW,EAAqDlF,EAAA,GAC/D,GAD+DA,EAAA,GACrDjB,OAAQ,CAChB,IAAMsM,EAAe,CAAEnB,MAAOhF,GAC1BA,IAAgBzM,KAAKuM,UAAWqG,EAAa5D,MAAO,GAEtD4D,EAAanD,MAAQ,KACrBmD,EAAaC,SAAW,IAE1B7C,EAAczC,KAAKqF,KAVH,MAAA5G,GAAAa,GAAA,EAAAC,EAAAd,EAAA,YAAAY,GAAA,MAAAI,EAAAf,QAAAe,EAAAf,SAAA,WAAAY,EAAA,MAAAC,GAapB,IAAMgG,EAAY9S,KAClBA,KAAKgQ,cAAgB,CACnB3D,QAAS2D,EACT+C,eAFmB,SAEJtB,GACb,QAASzR,KAAKqM,QAAQ9C,OAAO,SAAAqJ,GAAY,OAAIA,EAAanB,QAAUA,IAAO,IAE7ED,aALmB,SAKNC,GACX,IACIuB,EADEC,EAAUjT,KAAKqM,QAAQ9F,IAAI,SAAAqM,GAAY,OAAIA,EAAanB,QAD5CyB,GAAA,EAAAC,GAAA,EAAAC,OAAA9H,EAAA,IAGlB,QAAA+H,EAAAC,EAAgBL,EAAhBvH,OAAAC,cAAAuH,GAAAG,EAAAC,EAAA1H,QAAAC,MAAAqH,GAAA,EAAyB,KAAdzM,EAAc4M,EAAA/P,MACvB,GAAImD,EAAIgL,EAAO,CACbuB,EAAYvM,EACZ,QANc,MAAAuF,GAAAmH,GAAA,EAAAC,EAAApH,EAAA,YAAAkH,GAAA,MAAAI,EAAArH,QAAAqH,EAAArH,SAAA,WAAAkH,EAAA,MAAAC,GAUlB,YADkB9H,IAAd0H,IAAyBA,EAAYC,EAAQ,IAC1CD,GAETO,sBAjBmB,WAmBjB,OAD0BvT,KAAKqM,QAAQ9C,OAAO,SAAAqJ,GAAY,OAAKA,EAAanD,QAClDnJ,QAE5BkN,SArBmB,WAsBjBxT,KAAKqM,QAAUrM,KAAKqM,QAAQ9F,IAAI,SAAAqM,GAAY,OAC1CA,EAAanB,QAAUqB,EAAUvG,UAAjC9H,OAAA0F,EAAA,EAAA1F,CAAA,GACQmO,EADR,CACsB5D,MAAM,IAC1B4D,0DAKmB,OAAvB5S,KAAK+P,cAAwB/P,KAAKyT,yCAC7BzT,KAAK+P,eACR/P,KAAKgQ,cAAc+C,eAAe/S,KAAK8P,UACzC9P,KAAK6P,SAAW7P,KAAK8P,SAKvB9P,KAAK6P,SAAW7P,KAAKgQ,cAAcwB,aAAaxR,KAAK8P,UAGvD9P,KAAK8P,SAAW9P,KAAKgQ,cAAcwB,aAAaxR,KAAK6P,UAErD7P,KAAKiQ,WAAWG,OAAO,CACrB,CAAEjE,KAAM,WAAY7I,MAAOtD,KAAK6P,UAChC,CAAE1D,KAAM,WAAY7I,MAAOtD,KAAK8P,6EAIlC,IAAMW,EAAczQ,KAAK8J,MAAMuC,QACzB1J,EAAgB8N,EAAYnK,OAC9BoN,EAAW,CACbjH,YAAa,KACbnJ,MAAO,IAL8BqQ,GAAA,EAAAC,GAAA,EAAAC,OAAAvI,EAAA,IAOvC,QAAAwI,EAAAC,EAA6BtD,EAAYhF,UAAzCC,OAAAC,cAAAgI,GAAAG,EAAAC,EAAAnI,QAAAC,MAAA8H,GAAA,EAAoD,KAAA1G,EAAA6G,EAAAxQ,MAAA4J,EAAAzI,OAAAsH,EAAA,EAAAtH,CAAAwI,EAAA,GAAxCwE,EAAwCvE,EAAA,GAAjCpD,EAAiCoD,EAAA,GAAA8G,GAAA,EAAAC,GAAA,EAAAC,OAAA5I,EAAA,IAClD,QAAA6I,EAAAC,EAAmBtK,EAAnB4B,OAAAC,cAAAqI,GAAAG,EAAAC,EAAAxI,QAAAC,MAAAmI,GAAA,EAA0B,KAAfhK,EAAemK,EAAA7Q,MACpB0G,EAAK8G,OAAS9Q,KAAKwH,WAAawC,EAAK1G,MAAQoQ,EAASpQ,QACxDoQ,EAAW,CACTjH,YAAagF,EACbnO,MAAO0G,EAAK1G,SALgC,MAAA0I,GAAAiI,GAAA,EAAAC,EAAAlI,EAAA,YAAAgI,GAAA,MAAAI,EAAAnI,QAAAmI,EAAAnI,SAAA,WAAAgI,EAAA,MAAAC,KAPb,MAAAlI,GAAA4H,GAAA,EAAAC,EAAA7H,EAAA,YAAA2H,GAAA,MAAAI,EAAA9H,QAAA8H,EAAA9H,SAAA,WAAA2H,EAAA,MAAAC,GAkBvC,GAA6B,OAAzBH,EAASjH,YACXzM,KAAK6P,SAAW6D,EAASjH,gBACpB,CACL,IAAMkF,EAAclH,KAAKwG,MAAMxG,KAAKyG,SAAWvO,GAC/C3C,KAAK6P,SAAW8B,EAElB3R,KAAK8P,SAAW9P,KAAKgQ,cAAcwB,aAAaxR,KAAK6P,qDAGrD7P,KAAK6H,WAAa4C,KAAK4J,IACrBrU,KAAK8J,MAAMuC,QAAQrM,KAAK8P,UAAUxJ,OAClCqB,EAAOE,4DAGaQ,GACjBA,IAAeA,EAAgBrI,KAAKsU,kBAAkBtU,KAAKuM,YAChEvM,KAAKiQ,WAAWG,OAAO,CAAC,CAACjE,KAAM,gBAAiB7I,MAAO+E,+CAEvCoE,GAChB,OAAIA,IAAgBzM,KAAK8P,SAAiB9P,KAAKuU,mBAAmB9H,GACtDzM,KAAKwU,mBAAmB/H,8CAEnBA,GACjB,IAAMgB,EAAUzN,KAAK8J,MAAMqE,MACrBsC,EAAczQ,KAAK8J,MAAMuC,QAAQI,GACvC,GAAIgB,EAAQnH,QAAUtG,KAAK6H,WAAY,MAAO,GAC9C,IAAK4F,EAAQnH,OAAQ,OAAOmK,EAAYlK,IAAI,SAAAyD,GAAI,OAAIA,EAAKhC,KAEzD,IAAMyM,EAAa,GANWC,GAAA,EAAAC,GAAA,EAAAC,OAAAtJ,EAAA,IAO9B,QAAAuJ,EAAAC,EAAqBrH,EAArB/B,OAAAC,cAAA+I,GAAAG,EAAAC,EAAAlJ,QAAAC,MAAA6I,GAAA,EAA8B,KAAnB9G,EAAmBiH,EAAAvR,MAC5BmR,EAAWlH,KAAXwH,MAAAN,EAAUhQ,OAAAuQ,EAAA,EAAAvQ,CAASmJ,KARS,MAAA5B,GAAA2I,GAAA,EAAAC,EAAA5I,EAAA,YAAA0I,GAAA,MAAAI,EAAA7I,QAAA6I,EAAA7I,SAAA,WAAA0I,EAAA,MAAAC,GAU9B,IAAMK,EAAiBR,EAAWlO,IAAI,SAAAyD,GAAI,OAAIA,EAAK6G,OACnD,OAAOJ,EAAYlH,OAAO,SAAAS,GAAI,OAAIiL,EAAe9L,SAASa,EAAK6G,QAC5CtK,IAAI,SAAAyD,GAAI,OAAIA,EAAKhC,gDAEnByE,GAAa,IAAAyI,EAAAlV,KACxByQ,EAAczQ,KAAK8J,MAAMuC,QAAQI,GACjC0I,EAAmBnV,KAAK8J,MAAMqE,MACjC5H,IAAI,SAACqH,EAAQ6D,GAAT,MAAoB,CAAC3H,MAAO8D,EAAQ6D,WACxClI,OAAO,SAAAqE,GACN,OAA4B,IAAxBA,EAAO9D,MAAMxD,SAGf+B,EAAgB,GARQ+M,GAAA,EAAAC,GAAA,EAAAC,OAAAhK,EAAA,IAS9B,IAT8B,IAS9BiK,EAT8BC,EAAA,eAUtBC,EAVsBF,EAAAjS,MAUFwG,MAAM,GAChC2G,EAAYlH,OAAO,SAAAS,GAAI,OACrBkL,EAAKQ,cAAc1L,EAAMyL,GAAYzN,KAAOgC,EAAKhC,KACjD2N,QAAQ,SAAA3L,GACH3B,EAAcc,SAASa,EAAKhC,KAAKK,EAAckF,KAAKvD,EAAKhC,OALlE4N,EAAqBT,EAArBzJ,OAAAC,cAAAyJ,GAAAG,EAAAK,EAAAhK,QAAAC,MAAAuJ,GAAA,EAAuCI,IATT,MAAAxJ,GAAAqJ,GAAA,EAAAC,EAAAtJ,EAAA,YAAAoJ,GAAA,MAAAQ,EAAA3J,QAAA2J,EAAA3J,SAAA,WAAAoJ,EAAA,MAAAC,GAiB9B,OAAOjN,uCAEIoE,GACX,IAAMpE,EAAgBrI,KAAKsU,kBAAkB7H,GAC7C,GAAIpE,EAAc/B,OAAQ,CACxB,IAAMuP,EAAa7V,KAAK8P,WAAarD,EAC/BqJ,GAAoB9V,KAAK8J,MAAMqE,MAAM7H,OACrCyP,IAAgB/V,KAAK8J,MAAMoE,KAAK5H,OAChC0P,EAAgBhW,KAAK8J,MAAMqE,MAAM5E,OAAO,SAAAqE,GAAM,OAAsB,IAAlBA,EAAOtH,SACzD2P,EAAS5N,EAAc,GACvB2B,EAAOhK,KAAKkW,YAAYD,GAC1BjH,GAAO,EAWX,OATK6G,GAKCxN,EAAc/B,OAAS0P,EAAc1P,SAAQ0I,GAAO,GACpD+G,GAAe/L,EAAK8G,OAAS9Q,KAAKwH,WAAawC,EAAK1G,MAAQ,KAAI0L,GAAO,IALtE8G,GACCC,GAAe/L,EAAK8G,OAAS9Q,KAAKwH,YAAWwH,GAAO,GAOvDA,EACO,KADMiH,oCAIbxJ,EAAawJ,GACpB,IAAMJ,EAAapJ,IAAgBzM,KAAK8P,SAClC9F,EAAOhK,KAAKkW,YAAYD,GAExBxB,EAAazU,KAAKmW,eAAenM,EAAM6L,GAEvCpF,EAAczQ,KAAK8J,MAAMuC,QAAQ9F,IAAI,SAACuD,EAAO2H,GACjD,OAAIA,IAAUhF,EACL3C,EAAMP,OAAO,SAAA6M,GAAU,OAAIA,EAAWpO,KAAOiO,IACxCnM,IAGhB9J,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEqE,MAAOsG,EACPpI,QAASoE,IAEXzQ,KAAKiQ,WAAWG,OAAO,CAAC,CAAEjE,KAAM,QAAS7I,MAAOtD,KAAK8J,gDAExCE,EAAMqM,GAAY,IAAAC,EAAAtW,KACzByU,EAAanH,EAAoBtN,KAAK8J,MAAMqE,OAClD,GAAIkI,EAAY,CACd,IAAIE,EAAgB,GACpB9B,EAAWkB,QAAQ,SAAC/H,EAAQ6D,GACJ,IAAlB7D,EAAOtH,QACPgQ,EAAKZ,cAAc1L,EAAM4D,EAAO,IAAI5F,KAAOgC,EAAKhC,IAC9CuO,EAAchJ,KAAKkE,KAG3B,IAAME,EAAclH,KAAKwG,MAAMxG,KAAKyG,SAAWqF,EAAcjQ,QACvDqH,EAAc4I,EAAc5E,GAClC,OAAO8C,EAAWlO,IAAI,SAACqH,EAAQ6D,GAAT,OACpBA,IAAU9D,EAAV,GAAA1L,OAAAwC,OAAAuQ,EAAA,EAAAvQ,CAA8BmJ,GAA9B,CAAsC5D,IAAU4D,IAIpD,SAAA3L,OAAAwC,OAAAuQ,EAAA,EAAAvQ,CAAYzE,KAAK8J,MAAMqE,OAAvB,CAA8B,CAAEnE,yCAEtBhC,GACV,IAAK,IAAMwO,KAASxW,KAAK8J,MAAO,KAAA2M,GAAA,EAAAC,GAAA,EAAAC,OAAArL,EAAA,IAC9B,QAAAsL,EAAAC,EAAmB7W,KAAK8J,MAAM0M,GAA9B9K,OAAAC,cAAA8K,GAAAG,EAAAC,EAAAjL,QAAAC,MAAA4K,GAAA,EAAsC,KAA3BpN,EAA2BuN,EAAAtT,MACpC,GAAI+F,aAAgBjD,MAAO,KAAA0Q,GAAA,EAAAC,GAAA,EAAAC,OAAA1L,EAAA,IACzB,QAAA2L,EAAAC,EAAmB7N,EAAnBqC,OAAAC,cAAAmL,GAAAG,EAAAC,EAAAtL,QAAAC,MAAAiL,GAAA,EAAyB,KAAd9M,EAAciN,EAAA3T,MACvB,GAAI0G,EAAKhC,KAAOA,EAAI,OAAOgC,GAFJ,MAAAgC,GAAA+K,GAAA,EAAAC,EAAAhL,EAAA,YAAA8K,GAAA,MAAAI,EAAAjL,QAAAiL,EAAAjL,SAAA,WAAA8K,EAAA,MAAAC,SAKzB,GAAI3N,EAAKrB,KAAOA,EAAI,OAAOqB,GAPD,MAAA2C,GAAA0K,GAAA,EAAAC,EAAA3K,EAAA,YAAAyK,GAAA,MAAAI,EAAA5K,QAAA4K,EAAA5K,SAAA,WAAAyK,EAAA,MAAAC,2CAYpB7U,EAAGkQ,GACf,OAAIlQ,EAAEgP,OAASkB,EAAElB,KACXhP,EAAEwB,MAAQ0O,EAAE1O,MAAcxB,EAClBkQ,EAEVlQ,EAAEgP,OAAS9Q,KAAKwH,UAAkB1F,EAC/BkQ,qDAEkB,IAAAmF,EAAAnX,KACnBoX,EAAepX,KAAKgQ,cAAc+C,eAAe/S,KAAKuM,WACxD8K,GAAyBD,EAFJE,GAAA,EAAAC,GAAA,EAAAC,OAAAlM,EAAA,IAGzB,IAHyB,IAGzBmM,EAHyBC,EAAA,eAGd9E,EAHc6E,EAAAnU,MAIvB,GAAIsP,EAAanB,QAAU0F,EAAK5K,UAC9B,GAAIqG,EAAa5D,KAAMqI,GAAyB,MAC3C,CACH,IAAMhP,EAAgB8O,EAAK7C,kBAAkB1B,EAAanB,OACrDpJ,EAAc/B,SAAQ+Q,GAAyB,GACpDF,EAAK3E,wBAAwBnK,QAE1B,IAAKuK,EAAanD,MAAO,CAC9B,IAAMpH,EAAgB8O,EAAK7C,kBAAkB1B,EAAanB,OACvDlI,OAAO,SAAA0M,GAAM,OACXrD,EAAaC,SAAS1J,SAAS8M,KAEpC,GAAI5N,EAAc/B,OAAQ,CACxB,IAAMqR,EAAaP,EACD,IAAhB3M,KAAKyG,SAAkB,IACP,KAAhBzG,KAAKyG,SAAkB,KAEzB0B,EAAanD,MAAQ/F,WACnB,WAAM,IAAAkO,EACJhF,EAAanD,MAAQ,KACrB,IAAMgD,EAAW0E,EAAKzE,aAAaE,EAAanB,OAC5CgB,EAAU0E,EAAK7O,SAASsK,EAAanB,MAAOgB,IAC3CmF,EAAAhF,EAAaC,UAAStF,KAAtBwH,MAAA6C,EAAAnT,OAAAuQ,EAAA,EAAAvQ,CAA8B4D,IAEnC8O,EAAKxE,4BACJgF,MA1BXE,EAA2B7X,KAAKgQ,cAAc3D,QAA9CX,OAAAC,cAAA2L,GAAAG,EAAAI,EAAAjM,QAAAC,MAAAyL,GAAA,EAAuDI,IAH9B,MAAA1L,GAAAuL,GAAA,EAAAC,EAAAxL,EAAA,YAAAsL,GAAA,MAAAO,EAAA5L,QAAA4L,EAAA5L,SAAA,WAAAsL,EAAA,MAAAC,GAiCrBxX,KAAKgQ,cAAcuD,yBAA2B8D,GAChDrX,KAAK8X,8CAIP9X,KAAK+P,cAAgB/P,KAAK8J,MAAMqE,MAAM4J,OAAO,SAACC,EAAMpK,GAAP,OACzB,IAAlBA,EAAOtH,QAAuB0R,IAAM,GAEtChY,KAAKiY,aACLjY,KAAKkY,yDAEM,IAAAC,EAAAnY,KACLyQ,EAAcnD,EAAoBtN,KAAK8J,MAAMuC,QAAQrM,KAAK8P,WAC1DsI,EAAiB9K,EAAoBtN,KAAK8J,MAAMsE,WAF3CiK,GAAA,EAAAC,GAAA,EAAAC,OAAAjN,EAAA,IAGX,QAAAkN,EAAAC,EAAqBzY,KAAK8J,MAAMqE,MAAhCzC,OAAAC,cAAA0M,GAAAG,EAAAC,EAAA7M,QAAAC,MAAAwM,GAAA,EAAuC,KAA5BzK,EAA4B4K,EAAAlV,MAAAoV,GAAA,EAAAC,GAAA,EAAAC,OAAAtN,EAAA,IACrC,QAAAuN,EAAAC,EAAmBlL,EAAnBlC,OAAAC,cAAA+M,GAAAG,EAAAC,EAAAlN,QAAAC,MAAA6M,GAAA,EAA2B,KAAhB1O,EAAgB6O,EAAAvV,MACrBtD,KAAK+P,cAAeqI,EAAe7K,KAAKvD,GACvCyG,EAAYlD,KAAKvD,IAHa,MAAAgC,GAAA2M,GAAA,EAAAC,EAAA5M,EAAA,YAAA0M,GAAA,MAAAI,EAAA7M,QAAA6M,EAAA7M,SAAA,WAAA0M,EAAA,MAAAC,KAH5B,MAAA5M,GAAAsM,GAAA,EAAAC,EAAAvM,EAAA,YAAAqM,GAAA,MAAAI,EAAAxM,QAAAwM,EAAAxM,SAAA,WAAAqM,EAAA,MAAAC,GASXvY,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEuC,QAASrM,KAAK8J,MAAMuC,QAAQ9F,IAAI,SAACuD,EAAO2H,GAAR,OAC9BA,IAAU0G,EAAKrI,SAAWW,EAAc3G,IAC1CsE,UAAWgK,EACXjK,MAAO,KAETnO,KAAK4R,kBACL5R,KAAKiQ,WAAWG,OAAO,CAAC,CAAEjE,KAAM,QAAS7I,MAAOtD,KAAK8J,qDASrD,IAPkB,IAAAiP,EAAA/Y,KACZ2C,EAAgB3C,KAAK8J,MAAMuC,QAAQ/F,OACrC0S,EAAoB,EACpBvH,EAAQzR,KAAK6P,SACXoJ,EAAgB,SAACxH,EAAOyH,GAAR,OACpBH,EAAKjP,MAAMuC,QAAQ9F,IAAI,SAACuD,EAAOrD,GAAR,OAAcgL,IAAUhL,EAAIyS,EAAWpP,KAE1DkP,EAAoBrW,GAAe,CACvC,IAAMwW,EAAiBnZ,KAAK8J,MAAMuC,QAAQoF,GAAOnL,OACjD,GAAI6S,EAAiBxR,EAAOC,qBAAsB,CAKhD,IAJA,IAAMwR,EAAczR,EAAOC,qBAAuBuR,EAC5C1I,EAAcnD,EAAoBtN,KAAK8J,MAAMuC,QAAQoF,IACrDnB,EAAYhD,EAAoBtN,KAAK8J,MAAMoE,MAExCzH,EAAI,EAAGA,EAAI2S,EAAa3S,IAC/B,GAAI6J,EAAUhK,OAAQ,CACpB,IAAM+S,EAAe/I,EAAUuB,MAC/BpB,EAAYlD,KAAK8L,GAIrBrZ,KAAK8J,MAALrF,OAAA0F,EAAA,EAAA1F,CAAA,GACKzE,KAAK8J,MADV,CAEEuC,QAAS4M,EAAcxH,EAAOhB,GAC9BvC,KAAMoC,IAIVtQ,KAAK4R,kBACL5R,KAAKiQ,WAAWG,OAAO,CAAC,CAAEjE,KAAM,QAAS7I,MAAOtD,KAAK8J,SACrDkP,KAEe,KADfvH,GAAgB,KACEA,EAAQ9O,EAAgB,sCAI5C,IAAI2W,EAAQ,KADJC,GAAA,EAAAC,GAAA,EAAAC,OAAAnO,EAAA,IAER,QAAAoO,EAAAC,EAAmC3Z,KAAK8J,MAAMuC,QAAQZ,UAAtDC,OAAAC,cAAA4N,GAAAG,EAAAC,EAAA/N,QAAAC,MAAA0N,GAAA,EAAiE,KAAAK,EAAAF,EAAApW,MAAAuW,EAAApV,OAAAsH,EAAA,EAAAtH,CAAAmV,EAAA,GAArDnN,EAAqDoN,EAAA,GAC/D,GAD+DA,EAAA,GACrDvT,OAAQ,CAChBgT,EAAQ7M,EACR,QALI,MAAAT,GAAAwN,GAAA,EAAAC,EAAAzN,EAAA,YAAAuN,GAAA,MAAAI,EAAA1N,QAAA0N,EAAA1N,SAAA,WAAAuN,EAAA,MAAAC,GAQRzZ,KAAKwH,UAAY,KACjBxH,KAAK8J,MAAQ,CACXoE,KAAM,GACN7B,QAAS,GACT8B,MAAO,GACPC,UAAW,IAEbpO,KAAKiQ,WAAWG,OAAO,CACrB,CAAEjE,KAAM,YAAa7I,OAAO,GAC5B,CAAE6I,KAAM,YAAa7I,MAAO,MAC5B,CAAE6I,KAAM,WAAY7I,MAAO,MAC3B,CAAE6I,KAAM,WAAY7I,MAAO,MAC3B,CAAE6I,KAAM,QAAS7I,MAAOgW,0CAGfrD,GACWjW,KAAKsU,kBAAkBtU,KAAKuM,WAChCpD,SAAS8M,KACzBjW,KAAKsI,SAAStI,KAAKuM,UAAW0J,GAC9BjW,KAAK2S,2DAIP3S,KAAKgQ,cAAcwD,WACnBxT,KAAKiQ,WAAWG,OAAO,CAAC,CAACjE,KAAM,gBAAiB7I,MAAO,MACvDtD,KAAK2S,oCClgBMmH,EAAA,CACbC,UAAW,GACXC,UAAU,EACVC,IAHa,SAGT9Z,GACFH,KAAK+Z,UAAUxM,KAAKpN,GACpBH,KAAKka,OAEPA,IAPa,WAOP,IAAApZ,EAAAd,KACJ,GAAIA,KAAK+Z,UAAUzT,SAAWtG,KAAKga,SAAU,CAC3C,IAAM7Z,EAAKH,KAAK+Z,UAAU,GAC1B/Z,KAAKga,UAAW,EAChBtQ,WAAW,WACTvJ,IACAW,EAAKiZ,UAAU9P,QACfnJ,EAAKkZ,UAAW,EAChBlZ,EAAKoZ,OACJ,QC0UMC,qBAzUd,SAAAA,EAAY3Y,GAAO,IAAAV,EAAA,OAAA2D,OAAAC,EAAA,EAAAD,CAAAzE,KAAAma,IAClBrZ,EAAA2D,OAAAE,EAAA,EAAAF,CAAAzE,KAAAyE,OAAAG,EAAA,EAAAH,CAAA0V,GAAAtV,KAAA7E,KAAMwB,KACDsD,MAAQ,CACZsV,SAAU,CACTtW,MAAO,KACPE,OAAQ,KAETlB,WAAW,EACXgD,WAAW,EACXyG,UAAW,EACX9J,SAAU,GACVC,KAAM,gBACNC,cAAe,EACf0J,QAAS,GACTvC,MAAO,CACNoE,KAAM,GACN7B,QAAS,GACT8B,MAAO,GACPC,UAAW,IAEZ/F,cAAe,GACfwH,SAAU,KACVC,SAAU,KACVtI,UAAW,KACX8R,MAAO,KACPe,YAAY,EACZ5R,UAAW,KACXgH,MAAO,MAGR3O,EAAKwZ,QAAU,KACfxZ,EAAKgS,UAAY,KACjBhS,EAAKyH,WAAa,KAClBzH,EAAKyZ,kBAAoBzZ,EAAKyZ,kBAAkBpV,KAAvBV,OAAAW,EAAA,EAAAX,CAAA3D,IACzBA,EAAK0Z,eAAiB1Z,EAAK0Z,eAAerV,KAApBV,OAAAW,EAAA,EAAAX,CAAA3D,IACtBA,EAAKkC,UAAYlC,EAAKkC,UAAUmC,KAAfV,OAAAW,EAAA,EAAAX,CAAA3D,IACjBA,EAAKwH,SAAWxH,EAAKwH,SAASnD,KAAdV,OAAAW,EAAA,EAAAX,CAAA3D,IAChBA,EAAKkO,KAAOlO,EAAKkO,KAAK7J,KAAVV,OAAAW,EAAA,EAAAX,CAAA3D,IACZA,EAAK0H,iBAAmB1H,EAAK0H,iBAAiBrD,KAAtBV,OAAAW,EAAA,EAAAX,CAAA3D,IACxBA,EAAK4H,aAAe5H,EAAK4H,aAAavD,KAAlBV,OAAAW,EAAA,EAAAX,CAAA3D,IACpBA,EAAK6H,gBAAkB7H,EAAK6H,gBAAgBxD,KAArBV,OAAAW,EAAA,EAAAX,CAAA3D,IACvBA,EAAK8B,WAAa9B,EAAK8B,WAAWuC,KAAhBV,OAAAW,EAAA,EAAAX,CAAA3D,IAClBA,EAAK+B,WAAa/B,EAAK+B,WAAWsC,KAAhBV,OAAAW,EAAA,EAAAX,CAAA3D,IAClBA,EAAKiC,oBAAsBjC,EAAKiC,oBAAoBoC,KAAzBV,OAAAW,EAAA,EAAAX,CAAA3D,IAC3BA,EAAKoC,iBAAmBpC,EAAKoC,iBAAiBiC,KAAtBV,OAAAW,EAAA,EAAAX,CAAA3D,IACxBA,EAAKmC,UAAYnC,EAAKmC,UAAUkC,KAAfV,OAAAW,EAAA,EAAAX,CAAA3D,IACjBA,EAAK0E,cAAgB1E,EAAK0E,cAAcL,KAAnBV,OAAAW,EAAA,EAAAX,CAAA3D,IACrBA,EAAKyE,mBAAqBzE,EAAKyE,mBAAmBJ,KAAxBV,OAAAW,EAAA,EAAAX,CAAA3D,IAC1BA,EAAK2Z,YAAc3Z,EAAK2Z,YAAYtV,KAAjBV,OAAAW,EAAA,EAAAX,CAAA3D,IAhDDA,iFAoDlB,IAAM4Z,EAAiBC,aAAaC,QAAQ,YAC5C,GAAIF,EAAgB,CACnB,IAAMG,EAAWpa,KAAKC,MAAMga,GACpBjY,EAAkCoY,EAAlCpY,SAAUC,EAAwBmY,EAAxBnY,KAAMC,EAAkBkY,EAAlBlY,cACxB3C,KAAKsF,SAAS,CAAE7C,WAAUC,OAAMC,8DAIf,IAAAsD,EACwBjG,KAAK8E,MAAvCrC,EADUwD,EACVxD,SAAUC,EADAuD,EACAvD,KAAMC,EADNsD,EACMtD,cAClB+X,EAAiBja,KAAKM,UAAU,CAAE0B,WAAUC,OAAMC,kBACxDgY,aAAaG,QAAQ,WAAYJ,sCAGvBK,GACV/a,KAAKsF,SAAS,CAAE7C,SAAUsY,uCAGhBrY,GACV1C,KAAKsF,SAAS,CAAE5C,qDAGGsY,GACnBhb,KAAKsF,SAAS,CAAE3C,cAAeqY,wCAI/Bhb,KAAKsF,SAAS,CAAEQ,WAAW,4CAI3B9F,KAAKsF,SAAS,CAAEQ,WAAW,iDAGP,IAAAL,EAAAzF,KACpBA,KAAKsF,SAAS,CAAEQ,WAAW,EAAOhD,WAAW,IAC7CjD,EAAUK,OAAO,SAACmE,EAAMqB,GACV,YAATrB,GAAsC,oBAAhBqB,EAAOrB,MAChC4W,EAAiBhB,IAAI,kBAAMxU,EAAK8U,kBAAkB7U,EAAO/E,KAAK0P,mDAKnD,IAAA6E,EAAAlV,KACb,OAAOA,KAAK8S,UAAU7C,WAAWE,UAAU,SAAAE,GAC1C4K,EAAiBhB,IAAI,kBAAM/E,EAAKqF,kBAAkBlK,gDAInC4F,EAAQ5T,GACxBrC,KAAKuI,WAAL9D,OAAA0F,EAAA,EAAA1F,CAAA,GACIzE,KAAKuI,WADT9D,OAAAyW,EAAA,EAAAzW,CAAA,GAEEwR,EAAS5T,6CAKX,IAAM8Y,EAAOC,SAASC,gBAChBvX,EAAQqX,EAAKG,YACbtX,EAASmX,EAAKI,aACpBvb,KAAKsF,SAAS,CACb8U,SAAU,CAAEtW,QAAOE,wDAID,IAAAsS,EAAAtW,KACfwb,GAAY,EACVrb,EAAK,WACLqb,IACJA,GAAY,EACZ9R,WAAW,WACV8R,GAAY,EACZlF,EAAKkE,kBACH,OAIL,OADA9a,OAAO+b,iBAAiB,SAAUtb,GAC3B,kBAAMT,OAAOgc,oBAAoB,SAAUvb,uCAGxCwC,GAKV,OAJgByD,MAAMC,KACrB,CAAEC,OAAQ3D,GACV,SAAC6L,EAAG/H,GAAJ,MAAW,CAAEsU,KAAM,SAAWtU,+CAKd4J,GACjB,IAAMsL,EAAe,GADKxQ,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE1B,QAAAC,EAAAC,EAA4B6E,EAA5B3E,OAAAC,cAAAR,GAAAI,EAAAC,EAAAI,QAAAC,MAAAV,GAAA,EAAqC,KAAA5D,EAAAgE,EAAAjI,MAA1B6I,EAA0B5E,EAA1B4E,KAAM7I,EAAoBiE,EAApBjE,MAChBqY,EAAaxP,GAAQ7I,GAHI,MAAA0I,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAM1BrL,KAAKsF,SAASqW,wCAGF1F,GACZjW,KAAKsF,SAAS,CAACmD,UAAWwN,8CAI1BjW,KAAKsF,SAAS,CAACmD,UAAW,2CAGf,IACH9F,EAAkB3C,KAAK8E,MAAvBnC,cACR3C,KAAK8S,UAAY,IAAIlD,EACrB5P,KAAK4b,YAAc5b,KAAK6b,cACxB7b,KAAKsF,SAAS,CACbxC,WAAW,EACXuJ,QAASrM,KAAK8b,WAAWnZ,KAG1B3C,KAAK8S,UAAUiJ,YAAYpZ,GAC3B3C,KAAK8S,UAAU9P,6CAGPiT,GACgB,kBAApBjW,KAAK8E,MAAMpC,KACd1C,KAAK8S,UAAUkJ,aAAa/F,GAE5BpW,EAAUe,KAAK,CAAEyD,KAAM,OAAQ1D,KAAM,CAAEsV,2CAKhB,kBAApBjW,KAAK8E,MAAMpC,KACd1C,KAAK8S,UAAU9D,OAEfnP,EAAUe,KAAK,CAAEyD,KAAM,wCAKxBxE,EAAUe,KAAK,CAAEyD,KAAM,kDAGP4X,GAChB,GAAwB,gBAApBjc,KAAK8E,MAAMpC,KAAf,CACA,IAAMwZ,EAAcD,EAAUnS,MAAMqE,MAC9BgO,EAAcnc,KAAK8E,MAAMgF,MAAMqE,MAC/BiO,EAAYH,EAAUzU,UACtB6U,EAAYrc,KAAK8E,MAAM0C,aACL0U,EAAY5V,SAAW6V,EAAY7V,SACnC8V,GAAaC,IACArc,KAAK8S,UAAUwJ,uDAGpCL,GAAW,IACJM,EAAsBN,EAArC5T,cADmBmU,EAEsCxc,KAAK8E,MAA9DuD,EAFmBmU,EAEnBnU,cAA+BoF,EAFZ+O,EAEJ1S,MAASqE,MAAkBkM,EAFvBmC,EAEuBnC,WAC9ChS,EAAc/B,QAAUmH,EAAQnH,OAC/BiW,EAAkBjW,SAAW+B,EAAc/B,QAAW+T,GACzDra,KAAKsF,SAAS,CAAE+U,YAAY,IAEnBA,GAAYra,KAAKsF,SAAS,CAAE+U,YAAY,0CAGtC4B,GACTA,EAAUnZ,YAAc9C,KAAK8E,MAAMhC,YACd,gBAApB9C,KAAK8E,MAAMpC,KACd7C,EAAUsB,SAEVnB,KAAK8S,UAAY,KACjB9S,KAAK4b,sDAKM,IACLnM,EAAUzP,KAAK8E,MAAf2K,MACRzP,KAAKsF,SAAS,CAACmK,MAAOA,EAAQ,IAChB,IAAVA,EAAazP,KAAKyc,OACjBzc,KAAKsa,QAAU5Q,WAAW1J,KAAKya,YAAa,+CAGhCwB,GACO,gBAApBjc,KAAK8E,MAAMpC,MACVuZ,EAAU5T,cAAc/B,SAAWtG,KAAK8E,MAAMuD,cAAc/B,SAC3DtG,KAAK8E,MAAMuD,cAAc/B,QAC5BtG,KAAKsF,SAAS,CAACmK,MAAO,KAClBzP,KAAKsa,SAASoC,aAAa1c,KAAKsa,SACpCta,KAAKsa,QAAU5Q,WAAW1J,KAAKya,YAAa,OAE5Cza,KAAKsF,SAAS,CAACmK,MAAO,OAClBzP,KAAKsa,SAASoC,aAAa1c,KAAKsa,uDAOvCta,KAAKwa,iBACLxa,KAAK2c,kBACL3c,KAAK4c,eAAiB5c,KAAK6c,+DAGTrO,EAAGyN,GACrBjc,KAAK8c,iBAAiBb,GACtBjc,KAAK+c,iBAAiBd,GACtBjc,KAAKgd,cAAcf,GACnBjc,KAAKid,kBAAkBhB,kDAInBjc,KAAK4c,gBAAgB5c,KAAK4c,iBAC1B5c,KAAK4b,aAAa5b,KAAK4b,+CAI3B,IAAMpZ,EX5PqB,SAAA4X,GAC3B,IAAM8C,EAAGzY,OAAA0F,EAAA,EAAA1F,CAAA,GACJ2V,EADI,CAEP+C,YAAa/C,EAAStW,MAAQsW,EAASpW,SAGnCxB,EAAQ,CACZsB,MAAO,IACPE,OAAQ,IACRD,YAAa,IACboZ,YAAa,IAAM,KAiBrB,OAdID,EAAIC,YAAc3a,EAAM2a,aAC1B3a,EAAM4a,MAAQF,EAAIlZ,OAASxB,EAAMwB,OACjCxB,EAAM6E,GAAK6V,EAAIpZ,MAAStB,EAAMsB,MAAQtB,EAAM4a,OAAU,EACtD5a,EAAM8E,EAAI,IAEV9E,EAAM4a,MAAQF,EAAIpZ,MAAQtB,EAAMsB,MAChCtB,EAAM6E,EAAI,EACV7E,EAAM8E,GAAK4V,EAAIlZ,OAAUxB,EAAMwB,OAASxB,EAAM4a,OAAU,GAG1D5a,EAAMH,MAAQ,CACZqF,UAAS,aAAAzF,OAAeO,EAAM6E,EAArB,QAAApF,OAA6BO,EAAM8E,EAAnC,cAAArF,OAAiDO,EAAM4a,MAAvD,MAGJ5a,EWiOO8K,CAAsBtN,KAAK8E,MAAMsV,UAC/C,OACCvY,EAAAC,EAAAC,cAACkC,EAAWoZ,SAAZ,CAAqB/Z,MAAO,CAC3BO,KAAM7D,KAAKwB,MAAMqC,KACjB0E,WAAYvI,KAAKuI,WACjBF,cAAerI,KAAK8E,MAAMuD,cAC1Bb,UAAWxH,KAAK8E,MAAM0C,UACtBiB,UAAWzI,KAAK8E,MAAM2D,UACtBD,iBAAkBxI,KAAKwI,iBACvBF,SAAUtI,KAAKsI,SACfI,aAAc1I,KAAK0I,aACnBC,gBAAiB3I,KAAK2I,kBAEtB9G,EAAAC,EAAAC,cAACub,EAAD,CACC9a,MAAOA,EACPM,UAAW9C,KAAK8E,MAAMhC,UACtBL,SAAUzC,KAAK8E,MAAMrC,SACrBC,KAAM1C,KAAK8E,MAAMpC,KACjBC,cAAe3C,KAAK8E,MAAMnC,cAC1BC,WAAY5C,KAAK4C,WACjBC,WAAY7C,KAAK6C,WACjBE,oBAAqB/C,KAAK+C,oBAC1BC,UAAWhD,KAAKgD,UAChBC,UAAWjD,KAAKiD,UAChBC,iBAAkBlD,KAAKkD,mBAExBrB,EAAAC,EAAAC,cAACwb,EAAD,CACC/a,MAAOA,EACPC,SAAUzC,KAAK8E,MAAMrC,SACrBE,cAAe3C,KAAK8E,MAAMnC,cAC1BG,UAAW9C,KAAK8E,MAAMhC,UACtBgD,UAAW9F,KAAK8E,MAAMgB,UACtBN,cAAexF,KAAKwF,cACpBD,mBAAoBvF,KAAKuF,qBAE1B1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQ8B,MAAOtB,EAAMsB,MAAOE,OAAQxB,EAAMwB,OAAQ3B,MAAOG,EAAMH,OAC3ER,EAAAC,EAAAC,cAACyb,EAAD,CAAOhb,MAAOA,IACdX,EAAAC,EAAAC,cAAC0b,EAAD,CACC3T,MAAO9J,KAAK8E,MAAMgF,MAClBtH,MAAOA,EACP6J,QAASrM,KAAK8E,MAAMuH,QACpBE,UAAWvM,KAAK8E,MAAMyH,YAEvB1K,EAAAC,EAAAC,cAAC2b,EAAD,CACC5O,KAAM9O,KAAK8E,MAAMuV,WACjBtL,KAAM/O,KAAK8E,MAAMgL,WAAa9P,KAAK8E,MAAMyH,UACpB,OAApBvM,KAAKwB,MAAMqC,KAAgB,iCAAU,UACjB,OAApB7D,KAAKwB,MAAMqC,KAAgB,qBAAQ,OACpCmL,KAAMhP,KAAK8E,MAAMuV,WAAara,KAAKgP,KAAO,OAE3CnN,EAAAC,EAAAC,cAAC4b,EAAD,CACCnb,MAAOA,EACP2M,cAAenP,KAAK8E,MAAMgL,SAC1BV,aAAcpP,KAAK8E,MAAMuH,QAAQ/F,OACjCiG,UAAWvM,KAAK8E,MAAMyH,YAEvB1K,EAAAC,EAAAC,cAAC6b,EAAD,CAAOnO,MAAOzP,KAAK8E,MAAM2K,SAE1B5N,EAAAC,EAAAC,cAAC8b,EAAD,eAnUalX,oBCJEmX,QACW,cAA7Bpe,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASme,MACvB,2DCZN,IAAMla,EAAoC,QAA7BnE,OAAOC,SAASqe,SAAqB,KAAO,KAC5C,OAATna,IAAeuX,SAAS6C,MAAQ,kCAEpCC,IAASC,OACPtc,EAAAC,EAAAC,cAACqc,EAAD,CAAKva,KAAMA,IACXuX,SAASiD,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.65bf83d3.chunk.js","sourcesContent":["import { w3cwebsocket } from 'websocket';\nconst websocketUrl = window.location.hostname === 'localhost' ?\n  'ws://127.0.0.1:8080' :\n  'wss://durak-app.herokuapp.com/';\n\nconst websocket = {\n  client: null,\n  connect() {\n    if (!this.client) {\n      this.client = new w3cwebsocket(websocketUrl, 'echo-protocol');\n    }\n  },\n  listen(fn) {\n    this.client.onclose = () => fn('closed');\n    this.client.onerror = error => fn('error', error);\n    this.client.onmessage = message => \n      fn('message', JSON.parse(message.data));\n  },\n  send(messageObject) {\n    const message = JSON.stringify(messageObject);\n    if (this.client.readyState === this.client.OPEN) {\n      this.client.send(message);\n    } else {\n      this.client.onopen = () => this.client.send(message);\n    }\n  },\n  close() {\n    if (this.client) {\n      this.client.close();\n      this.client = null;\n    }\n  }\n};\n\nexport default websocket;","import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;","import React from 'react';\nimport AppContext from '../context/AppContext';\nimport '../stylesheets/Menu.css';\n\nconst MenuItemOption = props => {\n  const { changeItem, currOption, option, optionText } = props;\n  return (\n    <span \n      className={`menu-item-option ${currOption === option ? 'current' : ''}`}\n      onClick={currOption !== option ? \n        e => {\n          e.preventDefault();\n          changeItem(option);\n        } \n        : null}\n      style={{ cursor: currOption !== option ? 'pointer' : 'default' }}\n    >\n      {optionText}\n    </span>\n  );\n};\n\nconst Menu = props => {\n  const { field, username, mode, playersNumber, changeName, changeMode, isPlaying,\n          changePlayersNumber, startGame, waitUsers, saveUserSettings } = props;\n          \n  const input = React.createRef();\n\n  const handleInputChange = e => {\n    let { value } = e.target;\n    if (input.current.placeholder) input.current.placeholder = '';\n    if (value) value = value[0].toUpperCase() + value.slice(1);\n    changeName(value);\n  };\n\n\n  const handleSubmit = lang => {\n    if (!username) {\n      input.current.placeholder = lang === 'ru' ? 'Введите имя': 'You should enter name';\n      return;\n    }\n    if (mode === 'single-player') {\n      saveUserSettings();\n      startGame();\n    } else {\n      saveUserSettings();\n      waitUsers();\n    }\n  };\n\n  const style = {\n    width: field.width - field.playerSpace * 2 + 'px',\n    height: field.width - field.playerSpace * 2 + 'px',\n  };\n\n  return (\n    <AppContext.Consumer>\n      { ({lang}) => (\n        <div className={`menu ${isPlaying ? 'hide' : ''}`} style={style}>\n          <h1>{lang === 'ru' ? 'Меню' : 'Menu'}</h1>\n          <div className=\"menu-items\">\n            <label className=\"menu-item\">\n              <span className=\"menu-item-name\">\n                {lang === 'ru' ? 'Имя:' : 'Name:'}\n              </span>\n              <input ref={input} type=\"text\" value={username} onChange={handleInputChange} />\n            </label>\n            <div className=\"menu-item\">\n              <span className=\"menu-item-name\">\n                {lang === 'ru' ? 'Играю:' : 'Mode:'}\n              </span>\n              <MenuItemOption \n                changeItem={changeMode} currOption={mode} \n                option=\"single-player\" \n                optionText={lang === 'ru' ? 'Один' : 'Single Player'}\n              />\n              <MenuItemOption \n                changeItem={changeMode} currOption={mode}\n                option=\"multiplayer\" \n                optionText={lang === 'ru' ? 'С друзьями' : 'Multiplayer'}\n              />\n            </div>\n            <div className=\"menu-item\">\n              <span className=\"menu-item-name\">\n                {lang === 'ru' ? 'Игроков:' : 'Players:'}\n              </span>\n              <MenuItemOption \n                changeItem={changePlayersNumber} currOption={playersNumber} \n                option={2} optionText=\"2\"\n              />\n              <MenuItemOption \n                changeItem={changePlayersNumber} currOption={playersNumber} \n                option={3} optionText=\"3\"\n              />\n              <MenuItemOption \n                changeItem={changePlayersNumber} currOption={playersNumber} \n                option={4} optionText=\"4\"\n              />\n              <MenuItemOption \n                changeItem={changePlayersNumber} currOption={playersNumber} \n                option={5} optionText=\"5\"\n              />\n              <MenuItemOption \n                changeItem={changePlayersNumber} currOption={playersNumber} \n                option={6} optionText=\"6\"\n              />\n            </div>\n          </div>\n          <button onClick={handleSubmit} >\n            {mode === 'single-player' ? \n              lang === 'ru' ? 'Играть' : 'Play' : \n              lang === 'ru' ? 'Ждать Других Игроков' : 'Wait for Users'}\n          </button>\n        </div>\n      )}\n    </AppContext.Consumer>\n\n  );\n};\n\nexport default Menu;","import React, { Component } from 'react';\nimport AppContext from '../context/AppContext';\nimport websocket from '../websocket';\nimport '../stylesheets/WaitPage.css';\n\nclass WaitPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      joinedUsers: [],\n      userConfirms: false,\n      allUsersConfirm: false\n    };\n\n    this.cancel = this.cancel.bind(this);\n    this.confirm = this.confirm.bind(this);\n  }\n\n  updateJoinedUsers(joinedUsers) {\n    this.setState({ joinedUsers });\n  }\n\n  confirm() {\n    this.setState({ userConfirms: true });\n    websocket.send({ type: 'confirm' });\n  }\n\n  allUsersConfirm() {\n    this.props.startMultiplayGame();\n  }\n\n  cancel() {\n    this.props.cancelWaiting();\n    websocket.close();\n  }\n\n  connectToWebsocket() {\n    websocket.connect();\n    websocket.listen((type, msgObj) => {\n      if (type === 'message') {\n        if (msgObj.type === 'joinedUsers') this.updateJoinedUsers(msgObj.data.joinedUsers);\n        if (msgObj.type === 'allUsersConfirm') this.allUsersConfirm();\n      }\n      if (type === 'closed') this.cancel();\n    });\n    websocket.send({ \n      type: 'addData',\n      username: this.props.username,\n      groupSize: this.props.playersNumber\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.isWaiting && !prevProps.isPlaying && this.props.isWaiting) {\n      this.connectToWebsocket();\n      this.setState({ joinedUsers: [], userConfirms: false, allUsersConfirm: false });\n    }\n  }\n\n  render() {\n    const { field, isWaiting, playersNumber } = this.props;\n    const { joinedUsers, userConfirms } = this.state;\n    const { lang } = this.context;\n    const style = {\n      width: field.width - field.playerSpace * 2 + 'px',\n      height: field.width - field.playerSpace * 2 + 'px',\n    };\n\n    return (\n      <div className={`wait-page ${!isWaiting ? 'hide' : ''}`} style={style}>\n        <h1>{lang === 'ru' ? 'Ожидание Игроков' : 'Wait for Users'}</h1>\n        <img src=\"/images/loading.png\" />\n        <div className=\"info\">\n          {Array.from({length: playersNumber})\n            .map((user, i) => (\n              <div \n                className={`user-block ${joinedUsers[i] && joinedUsers[i].confirm ? \n                  'confirm' : ''}`} \n                key={i}>\n                {joinedUsers[i] ? joinedUsers[i].username : ''}\n              </div>\n            ))}\n        </div>\n        <div className=\"buttons\">\n          <button className=\"cancel-button\" onClick={this.cancel}>\n            {lang === 'ru' ? 'Отмена' : 'Cancel'}\n          </button>\n          {\n            joinedUsers.length === playersNumber && !userConfirms &&\n            <button className=\"confirm-button\" onClick={this.confirm}>\n              {lang === 'ru' ? 'Подтвердить' : 'Confirm'}\n            </button>\n          }\n        </div>\n      </div>\n    );\n  }\n}\nWaitPage.contextType = AppContext;\n\nexport default WaitPage;","import React from 'react';\nimport '../stylesheets/Table.css';\n\nconst Table = ({field}) => {\n  const style = {\n    cx: field.width / 2 + 'px',\n    cy: field.height / 2 + 'px',\n    r: (field.width - field.playerSpace * 2) / 2 + 'px'\n  };\n  return <circle className=\"table\" style={style} />;\n};\n\nexport default Table;\n","import React from 'react';\nimport AppContext from '../context/AppContext';\n\nconst TrumpSymbol = ({ placeCenter }) => {\n  const cardSize = {\n    width: 50,\n    height: 77.78\n  };\n\n  const coords = {\n    x: placeCenter.x - cardSize.width / 2,\n    y: placeCenter.y - cardSize.height / 2\n  };\n  \n  return (\n    <AppContext.Consumer>\n      {\n        ({trumpSuit}) => {\n          if (trumpSuit) {\n            return (\n              <image\n                x={0}\n                y={0}\n                width={cardSize.width}\n                height={cardSize.height}\n                href={`/images/card-suits/${trumpSuit}.svg`}\n                style={{transform: `translate(${coords.x}px, ${coords.y}px)`}}\n              />\n            );\n          } else return null\n        }\n      }\n    </AppContext.Consumer>\n  );\n};\n\nexport default TrumpSymbol;","const config = {\n  cardSize: {\n    width: 50,\n    height: 77.78\n  },\n  maxCardsAfterDealing: 6,\n  maxAttacks: 6\n};\n\nexport default config;\n","import React, { Component } from 'react';\nimport AppContext from '../context/AppContext';\nimport gameConfig from '../lib/gameConfig';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.imageElement = React.createRef();\n  }\n\n  render() {\n    const { id, rotation, coords, side, activePlayer } = this.props;\n    const { possibleCards, makeMove, cardStyles, \n            updateCardStyles, movedCard, addMovedCard, removeMovedCard } = this.context;\n    const { imageElement } = this;\n    const { cardSize } = gameConfig;\n\n    const x = coords.x - cardSize.width / 2;\n    let y = coords.y - cardSize.height / 2;\n    if (activePlayer && movedCard === id) y -= 20;\n    const translate = `translate(${x}px, ${y}px)`;\n    const rotate = `rotate(${rotation ? rotation + 'deg' : '0deg'})`;\n    const cardStyle = cardStyles ? cardStyles[id] : null;\n    const newStyle = {\n      transformOrigin: `${coords.x}px ${coords.y}px`,\n      transform: `${rotate} ${translate}`\n    };\n\n    const darker = activePlayer && !possibleCards.includes(id);\n  \n    const applyStyle = (elem, style, transition) => {\n      elem.style.transform = style.transform;\n      elem.style.transformOrigin = style.transformOrigin;\n      elem.style.transition = transition ? '0.3s' : '0s';\n      elem.style.cursor = activePlayer && !darker ? 'pointer' : 'auto';\n      elem.style.filter = darker ? 'url(\"#darker\")' : 'none';\n    };\n\n  \n    (function changeStyles() {\n      window.requestAnimationFrame(() => {\n        const elem = imageElement.current;\n        if (!elem) changeStyles();\n        else {\n          if (cardStyle) {\n            applyStyle(elem, cardStyle, false);\n            window.requestAnimationFrame(() => {\n              applyStyle(elem, newStyle, true);\n              updateCardStyles(id, newStyle);\n            });\n          } else {\n            applyStyle(elem, newStyle, false);\n            updateCardStyles(id, newStyle);\n          }\n        }\n      });\n    })();\n\n    const moveCardUp = () => {\n      if (!movedCard && activePlayer && !darker) addMovedCard(id);\n    };\n\n    const moveCardDown = () => {\n      if (movedCard === id) removeMovedCard();\n    };\n  \n    const onClick = () => {\n      if (activePlayer && !darker) {\n        makeMove(id);\n        if (movedCard === id) setTimeout(removeMovedCard, 300);\n      }\n    };\n  \n    return (\n      <image\n        ref={this.imageElement}\n        x={0}\n        y={0}\n        width={cardSize.width}\n        height={cardSize.height}\n        href={side === 'front' ?\n          `/images/cards/${id}.png` :\n          `/images/cards/back.png`\n        }\n        id={id}\n        className=\"card\"\n        onClick={onClick}\n        onMouseOver={moveCardUp}\n        onMouseLeave={moveCardDown}\n      />\n    );\n  }\n}\n\nCard.contextType = AppContext;\n\nexport default Card;\n","import React, { Fragment } from 'react';\nimport TrumpSymbol from './TrumpSymbol';\nimport Card from './Card';\n\nconst DeckCards = props => {\n  const { cards, placeCenter } = props;\n  \n  const addProps = (card, i) => {\n    const shift = {\n      x: i * 0.1 + (card.trump ? -19 : 0),\n      y: -i * 0.1 + (card.trump ? 13 : 0)\n    };\n    const coords = {\n      x: placeCenter.x + shift.x,\n      y: placeCenter.y + shift.y\n    };\n    const rotation = card.trump ? 90 : 0;\n    return {\n      ...card,\n      coords,\n      rotation,\n      side: card.trump ? 'front' : 'back'\n    };\n  };\n\n  return (\n    <Fragment>\n      {\n        cards.length ?\n          cards.map(addProps).map(card => <Card {...card} key={card.id} />) :\n          <TrumpSymbol placeCenter={placeCenter} />\n      }\n    </Fragment>\n  );\n};\n\nexport default DeckCards;\n","const toRadian = angle => angle * Math.PI / 180;\n\nexport const findRightTriangleSides = (angle, hypotenuse) => {\n  return {\n    x: Math.cos(toRadian(angle)) * hypotenuse,\n    y: Math.sin(toRadian(angle)) * hypotenuse\n  };\n};\n\nexport const getDeepCopy = obj => {\n  const isArray = obj instanceof Array;\n  const isObj = typeof obj === 'object' && !isArray;\n  if (!isArray && !isObj) return obj;\n  if (isArray) {\n    const newArray = [];\n    for (const [i, elem] of obj.entries()) {\n      newArray[i] = getDeepCopy(elem);\n    }\n    return newArray;\n  } \n  // It is object\n  const newObj = {};\n  for (const prop in obj) {\n    newObj[prop] = getDeepCopy(obj[prop]);\n  }\n  return newObj;\n};\n\nexport const getFieldProps = viewport => {\n  const svg = {\n    ...viewport,\n    aspectRatio: viewport.width / viewport.height\n  };\n\n  const field = {\n    width: 700,\n    height: 600,\n    playerSpace: 150,\n    aspectRatio: 700 / 600\n  };\n\n  if (svg.aspectRatio > field.aspectRatio) {\n    field.scale = svg.height / field.height;\n    field.x = (svg.width - (field.width * field.scale)) / 2;\n    field.y = 0;\n  } else {\n    field.scale = svg.width / field.width;\n    field.x = 0;\n    field.y = (svg.height - (field.height * field.scale)) / 2;\n  }\n\n  field.style = {\n    transform: `translate(${field.x}px, ${field.y}px) scale(${field.scale})`\n  };\n\n  return field;\n};","import React, { Fragment } from 'react';\nimport Card from './Card';\nimport * as helpers from '../lib/helpers';\n\nconst PlayerCards = props => {\n  const { players, playerCardsPosition, userIndex } = props;\n  const allCards = [];\n\n  for (const [playerIndex, cards] of players.entries()) {\n    const { angle, ...placeCenter } = playerCardsPosition[playerIndex];\n    for (const [cardIndex, card] of cards.entries()) {\n      const oneCardShift = playerIndex === userIndex ? 20 : 5;\n      const shift = (cardIndex - (cards.length - 1) / 2) * oneCardShift;\n      const relativeToPlaceCenter = helpers.findRightTriangleSides(\n        angle,\n        shift\n      );\n      const coords = {\n        x: placeCenter.x + relativeToPlaceCenter.x,\n        y: placeCenter.y + relativeToPlaceCenter.y\n      };\n\n      allCards.push({\n        ...card,\n        rotation: angle,\n        coords,\n        side: playerIndex === userIndex ? 'front' : 'back',\n        activePlayer: playerIndex === userIndex\n      });\n    }\n  }\n\n  return (\n    <Fragment>\n      {allCards.map(card =>  <Card { ...card } key={card.id} />)}\n    </Fragment>\n  );\n};\n\nexport default PlayerCards;\n","import React, { Fragment } from 'react';\nimport Card from './Card';\n\nconst TableCards = ({ attacks, placeCenter }) => {\n  const allCards = [];\n  for (const [attackIndex, attack] of attacks.entries()) {\n    for (const [cardIndex, card] of attack.entries()) {\n      const attacking = cardIndex === 0;\n      const shift = {};\n      if (attacks.length > 3) {\n        if (attackIndex > 2) {\n          shift.x = attackIndex - 3 - (attacks.length - 4) / 2;\n          shift.y = 1;\n        } else {\n          shift.x = attackIndex - 1;\n          shift.y = -1;\n        }\n      } else {\n        shift.x = attackIndex - (attacks.length - 1) / 2;\n        shift.y = 0;\n      }\n\n      if (!attacking) {\n        shift.x += 0.05;\n        shift.y += 0.4;\n      }\n\n      shift.x = shift.x * 70;\n      shift.y = shift.y * 60;\n\n      const coords = {\n        x: placeCenter.x + shift.x,\n        y: placeCenter.y + shift.y\n      };\n\n      allCards.push({ ...card, coords, side: 'front' });\n    }\n  }\n\n  return (\n    <Fragment>\n      {allCards.map(card => <Card { ...card } key={card.id} />)}\n    </Fragment>\n  );\n};\n\nexport default TableCards;\n","import React, { Fragment } from 'react';\nimport Card from './Card';\n\nconst DiscardedCards = ({ cards, placeCenter }) => (\n  <Fragment>\n    {cards.map(card => \n      <Card {...card} key={card.id} coords={ {...placeCenter} } side= 'back' />\n    )}\n  </Fragment>\n);\n\nexport default DiscardedCards;\n","import React, { Fragment } from 'react';\nimport DeckCards from './DeckCards';\nimport PlayerCards from './PlayerCards';\nimport TableCards from './TableCards';\nimport DiscardedCards from './DiscardedCards';\nimport * as helpers from '../lib/helpers';\n\nconst Cards = props => {\n  const { cards, field, players, userIndex } = props;\n  const findPlayerCardsPosition = () => {\n    const avgSide = (field.width + field.height) / 2;\n    const fromCenterToPlayerCards = avgSide / 2 - field.playerSpace / 2;\n\n    return Array.from(\n      { length: players.length },\n      (_, i) => {\n        const angle = (i - userIndex) * 360 / players.length;\n        const relativeToCenterCoords = helpers.findRightTriangleSides(\n          angle + 90,\n          fromCenterToPlayerCards\n        );\n        return {\n          angle,\n          x: field.width / 2 + relativeToCenterCoords.x,\n          y: field.height / 2 + relativeToCenterCoords.y\n        };\n      }\n    );\n  };\n\n  const placeCenters = {\n    deck: {\n      x: field.width * 0.36,\n      y: field.height * 0.5\n    },\n    table: {\n      x: field.width * 0.55,\n      y: field.height * 0.48\n    },\n    discarded: {\n      x: field.width * 1.7,\n      y: field.height * 0.5\n    }\n  };\n\n  return (\n    <Fragment>\n      <DeckCards cards={cards.deck} placeCenter={placeCenters.deck} />\n      <PlayerCards \n        players={cards.players} \n        playerCardsPosition={findPlayerCardsPosition()} \n        userIndex={userIndex}\n      />\n      <TableCards attacks={cards.table} placeCenter={placeCenters.table} />\n      <DiscardedCards cards={cards.discarded} placeCenter={placeCenters.discarded} />\n    </Fragment>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport '../stylesheets/PassButton.css';\n\nconst PassButton = ({show, text, pass}) => {\n  const style = {\n    opacity: show ? 1 : 0,\n    cursor: show ? 'pointer' : 'default'\n  };\n\n  return (\n    <g\n      className=\"pass-button\"\n      style={style}\n      onClick={e => {\n        e.preventDefault();\n        pass();\n      }}\n    >\n      <rect />\n      <text>{text}</text>\n    </g>\n  );\n};\n\nexport default PassButton;\n","import React from 'react';\nimport * as helpers from '../lib/helpers';\nimport '../stylesheets/Arrow.css';\n\nconst Arrow = ({field, defenderIndex, playersCount, userIndex}) => {\n\tif (defenderIndex === null) return null;\n\tconst angle = (defenderIndex - userIndex) * 360 / playersCount;\n\tconst fromCenter = (field.width - field.playerSpace * 2) / 2 - 35;\n\tconst relativeToCenter = helpers.findRightTriangleSides(\n\t\tangle + 95,\n\t\tfromCenter\n\t);\n\tconst x = field.width / 2 + relativeToCenter.x;\n\tconst y = field.height / 2 + relativeToCenter.y;\n\n\tconst style = {\n\t\ttransform: `rotate(${angle}deg) translate(${x}px, ${y}px)`,\n\t\ttransformOrigin: `${x}px ${y}px`\n\t};\n\n\treturn (\n\t\t<polygon className=\"arrow\" points=\"0,0 28,0 14,28\" x={0} y={0} style={style} />\n\t)\n};\n\nexport default Arrow;","import React from 'react';\nimport '../stylesheets/Timer.css'\n\nconst Timer = ({ timer }) => {\n  if (timer === null) return null;\n\n  return (\n    <g className=\"timer\" >\n      <rect />\n      <text>{timer}</text>\n    </g>\n  );\n  \n};\n\nexport default Timer;","import React from 'react';\n\nconst Filters = () => {\n  return (\n    <defs>\n      <filter id=\"darker\">\n        <feColorMatrix\n          type=\"matrix\"\n          values=\".6   0   0   0   0\n                  0  .6   0   0   0\n                  0   0  .6   0   0\n                  0   0   0   1   0 \"/>\n      </filter>\n    </defs>\n  );\n};\n\nexport default Filters;\n","import config from './gameConfig';\nimport * as helpers from './helpers';\n\nclass GameState {\n  constructor(mode) {\n    this.cards = {\n      deck: [],\n      players: [],\n      table: [],\n      discarded: []\n    };\n    this.userIndex = 0;\n    this.trumpSuit = null;\n    this.attacker = null;\n    this.defender = null;\n    this.defendSucceed = null;\n    this.activePlayers = {\n      players: []\n    };\n    this.maxAttacks = 0;\n    this.observable = {\n      subscriber: null,\n      subscribe(fn) {\n        this.subscriber = fn;\n        return () => this.subscriber = null;\n      },\n      update(updates) {\n        this.subscriber(updates);\n      }\n    };\n  }\n  initNewGame(playersNumber) {\n    const deckCards = this.shuffleCards(this.genCards());\n    const playerCards = Array.from({length: playersNumber}, () => ([]));\n    this.cards = {\n      ...this.cards,\n      deck: deckCards,\n      players: playerCards\n    };\n    this.observable.update([{ prop: 'cards', value: this.cards }]);\n  }\n  genCards() {\n    const ranks = [\n      '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'\n    ];\n    const values = [\n      2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14\n    ];\n    const suits = ['clubs', 'diamonds', 'hearts', 'spades'];\n    const cards = [];\n    for (let i = 0; i < ranks.length; i++) {\n      for (let n = 0; n < suits.length; n++) {\n        cards.push({\n          id: `${ranks[i]}-${suits[n]}`,\n          rank: ranks[i],\n          suit: suits[n],\n          value: values[i]\n        });\n      }\n    }\n\n    return cards;\n  }\n  shuffleCards(cards) {\n    const cardsCopy = helpers.getDeepCopy(cards);\n\n    for (let i = cardsCopy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const tmp = helpers.getDeepCopy(cardsCopy[i]);\n      cardsCopy[i] = helpers.getDeepCopy(cardsCopy[j]);\n      cardsCopy[j] = helpers.getDeepCopy(tmp);\n    }\n\n    return cardsCopy;\n  }\n  startGame() {\n    this.dealCards();\n    this.chooseTrump();\n    this.clearGameProps();\n  }\n  dealCards() {\n    const dealerIndex = this.userIndex;\n    const playersNumber = this.cards.players.length;\n    const getNextIndex = index => index + 1 === playersNumber ? 0 : index + 1;\n    let index = getNextIndex(dealerIndex);\n    while(this.cards.players[index].length < config.maxCardsAfterDealing) {\n      this.dealOneCard(index);\n      this.observable.update([{ prop: 'cards', value: this.cards }]);\n      index = getNextIndex(index);\n    }\n  }\n  chooseTrump() {\n    const deckCards = helpers.getDeepCopy(this.cards.deck);\n    const randomIndex = Math.floor(Math.random() * deckCards.length);\n    const card = deckCards[randomIndex];\n    deckCards[randomIndex] = deckCards[0];\n    deckCards[0] = { ...card, trump: true };\n    this.cards = {\n      ...this.cards,\n      deck: deckCards\n    };\n    this.trumpSuit = card.suit;\n    this.sortPlayerCards();\n    this.observable.update([\n      { prop: 'cards', value: this.cards },\n      { prop: 'trumpSuit', value: this.trumpSuit }\n    ]);\n  }\n  dealOneCard(playerIndex) {\n    const deckCards = helpers.getDeepCopy(this.cards.deck);\n    const playerCards = helpers.getDeepCopy(this.cards.players);\n    const card = deckCards.pop();\n    playerCards[playerIndex].push(card);\n\n    this.cards = {\n      ...this.cards,\n      deck: deckCards,\n      players: playerCards\n    };\n    this.sortPlayerCards();\n  }\n  sortPlayerCards() {\n    const isTrump = card => card.suit === this.trumpSuit;\n    const isEqualSuit = (card1, card2) => {\n      if (!this.trumpSuit) return true;\n      if (isTrump(card1) && isTrump(card2)) return true;\n      if (!isTrump(card1) && !isTrump(card2)) return true;\n      return false;\n    };\n\n    const playerCards = helpers.getDeepCopy(this.cards.players);\n    for (const cards of playerCards) {\n      cards.sort((a, b) => {\n        if (isEqualSuit(a, b)) return a.value - b.value;\n        if (isTrump(a) && !isTrump(b)) return 1;\n        if (!isTrump(a) && isTrump(b)) return -1;\n        return 0;\n      });\n    }\n\n    this.cards = {\n      ...this.cards,\n      players: playerCards\n    };\n  }\n  clearGameProps() {\n    this.defendSucceed = null;\n  }\n  startTrick() {\n    if (this.getNumberOfActivePlayers() < 2) this.endGame();\n    else {\n      this.updateActivePlayers();\n      this.updateAttackerAndDefender();\n      this.updateMaxAttacks();\n      if (this.attacker === this.userIndex) this.sendPossibleCardsToUser();\n      else {\n        const decision = this.makeDecision(this.attacker);\n        this.makeMove(this.attacker, decision);\n        this.updateActivePlayerTimers();\n      }\n    }\n  }\n  getNumberOfActivePlayers() {\n    return this.cards.players.filter(cards => cards.length).length;\n  }\n  updateActivePlayers() {\n    const activePlayers = [];\n    for (const [playerIndex, cards] of this.cards.players.entries()) {\n      if (cards.length) {\n        const playerObject = { index: playerIndex };\n        if (playerIndex === this.userIndex) playerObject.pass = false;\n        else {\n          playerObject.timer = null;\n          playerObject.rejected = [];\n        }\n        activePlayers.push(playerObject);\n      }\n    }\n    const gameState = this;\n    this.activePlayers = {\n      players: activePlayers,\n      isPlayerInGame(index) {\n        return !!this.players.filter(playerObject => playerObject.index === index)[0];\n      },\n      getNextIndex(index) {\n        const indexes = this.players.map(playerObject => playerObject.index);\n        let nextIndex;\n        for (const i of indexes) {\n          if (i > index) {\n            nextIndex = i;\n            break;\n          }\n        }\n        if (nextIndex === undefined) nextIndex = indexes[0];\n        return nextIndex;\n      },\n      playersDontHaveTimers() {\n        const playersWithTimers = this.players.filter(playerObject =>  playerObject.timer);\n        return !playersWithTimers.length;\n      },\n      userPass() {\n        this.players = this.players.map(playerObject => \n          playerObject.index === gameState.userIndex ? \n            ({ ...playerObject, pass: true }) : \n            playerObject)\n      }\n    };\n  }\n  updateAttackerAndDefender() {\n    if (this.defendSucceed === null) this.defineAttackerAndDefenderByLowestTrump();\n    else if (this.defendSucceed) {\n      if (this.activePlayers.isPlayerInGame(this.defender)) {\n        this.attacker = this.defender;\n      } else {\n        this.attacker = this.activePlayers.getNextIndex(this.defender);\n      }\n    } else {\n      this.attacker = this.activePlayers.getNextIndex(this.defender);\n    }\n\n    this.defender = this.activePlayers.getNextIndex(this.attacker);\n\n    this.observable.update([\n      { prop: 'attacker', value: this.attacker },\n      { prop: 'defender', value: this.defender }\n    ])\n  }\n  defineAttackerAndDefenderByLowestTrump() {\n    const playerCards = this.cards.players;\n    const playersNumber = playerCards.length;\n    let minTrump = {\n      playerIndex: null,\n      value: 15\n    };\n    for (const [index, cards] of playerCards.entries()) {\n      for (const card of cards) {\n        if (card.suit === this.trumpSuit && card.value < minTrump.value) {\n          minTrump = {\n            playerIndex: index,\n            value: card.value\n          };\n        }\n      }\n    }\n\n    if (minTrump.playerIndex !== null) {\n      this.attacker = minTrump.playerIndex;\n    } else {\n      const randomIndex = Math.floor(Math.random() * playersNumber);\n      this.attacker = randomIndex;\n    }\n    this.defender = this.activePlayers.getNextIndex(this.attacker);\n  }\n  updateMaxAttacks() {\n    this.maxAttacks = Math.min(\n      this.cards.players[this.defender].length,\n      config.maxAttacks\n    );\n  }\n  sendPossibleCardsToUser(possibleCards) {\n    if (!possibleCards) possibleCards = this.findPossibleCards(this.userIndex);\n    this.observable.update([{prop: 'possibleCards', value: possibleCards}]);\n  }\n  findPossibleCards(playerIndex) {\n    if (playerIndex === this.defender) return this.findCardsForDefend(playerIndex);\n    else return this.findCardsForAttack(playerIndex);\n  }\n  findCardsForAttack(playerIndex) {\n    const attacks = this.cards.table;\n    const playerCards = this.cards.players[playerIndex];\n    if (attacks.length >= this.maxAttacks) return [];\n    if (!attacks.length) return playerCards.map(card => card.id);\n\n    const tableCards = [];\n    for (const attack of attacks) {\n      tableCards.push(...attack);\n    }\n    const tableCardRanks = tableCards.map(card => card.rank);\n    return playerCards.filter(card => tableCardRanks.includes(card.rank))\n                      .map(card => card.id);\n  }\n  findCardsForDefend(playerIndex) {\n    const playerCards = this.cards.players[playerIndex];\n    const notBeatenAttacks = this.cards.table\n      .map((attack, index) => ({cards: attack, index}))\n      .filter(attack => {\n        if (attack.cards.length === 1) return true;\n        return false;\n      });\n    const possibleCards = [];\n    for (const attack of notBeatenAttacks) {\n      const attackCard = attack.cards[0];\n      playerCards.filter(card =>\n        this.getHigherCard(card, attackCard).id === card.id\n      ).forEach(card => {\n        if (!possibleCards.includes(card.id)) possibleCards.push(card.id);\n      });\n    }\n    return possibleCards;\n  }\n  makeDecision(playerIndex) {\n    const possibleCards = this.findPossibleCards(playerIndex);\n    if (possibleCards.length) {\n      const isDefender = this.defender === playerIndex;\n      const isAttackRequired = !this.cards.table.length;\n      const cardsInDeck = !!this.cards.deck.length;\n      const unbeatenCards = this.cards.table.filter(attack => attack.length === 1);\n      const cardId = possibleCards[0];\n      const card = this.getCardById(cardId);\n      let pass = false;\n\n      if (!isDefender) {\n        if (!isAttackRequired) {\n          if (cardsInDeck && card.suit === this.trumpSuit) pass = true;\n        }\n      } else {\n        if (possibleCards.length < unbeatenCards.length) pass = true;\n        if (cardsInDeck && card.suit === this.trumpSuit && card.value > 10) pass = true;\n      }\n\n      if (!pass) return cardId;\n      else return null;\n    } \n  }\n  makeMove(playerIndex, cardId) {\n    const isDefender = playerIndex === this.defender;\n    const card = this.getCardById(cardId);\n\n    const tableCards = this.addCardToTable(card, isDefender);\n\n    const playerCards = this.cards.players.map((cards, index) => {\n      if (index === playerIndex) {\n        return cards.filter(playerCard => playerCard.id !== cardId);\n      } else return cards;\n    });\n\n    this.cards = {\n      ...this.cards,\n      table: tableCards,\n      players: playerCards\n    };\n    this.observable.update([{ prop: 'cards', value: this.cards }]);\n  }\n  addCardToTable(card, defendCard) {\n    const tableCards = helpers.getDeepCopy(this.cards.table);\n    if (defendCard) {\n      let attackIndexes = [];\n      tableCards.forEach((attack, index) => {\n        if (attack.length === 1 &&\n            this.getHigherCard(card, attack[0]).id === card.id) {\n              attackIndexes.push(index);\n        }\n      });\n      const randomIndex = Math.floor(Math.random() * attackIndexes.length);\n      const attackIndex = attackIndexes[randomIndex];\n      return tableCards.map((attack, index) =>\n        index === attackIndex ? ([ ...attack, card ]) : attack\n      );\n    } \n    \n    return [ ...this.cards.table, [ card] ];\n  }\n  getCardById(id) {\n    for (const place in this.cards) {\n      for (const elem of this.cards[place]) {\n        if (elem instanceof Array) {\n          for (const card of elem) {\n            if (card.id === id) return card;\n          }\n        } else {\n          if (elem.id === id) return elem;\n        }\n      }\n    }\n  }\n  getHigherCard(a, b) {\n    if (a.suit === b.suit) {\n      if (a.value > b.value) return a;\n      else return b;\n    }\n    if (a.suit === this.trumpSuit) return a;\n    return b;\n  }\n  updateActivePlayerTimers() {\n    const isUserInGame = this.activePlayers.isPlayerInGame(this.userIndex);\n    let userHasNoPossibleCards = isUserInGame ? false : true;\n    for (const playerObject of this.activePlayers.players) {\n      if (playerObject.index === this.userIndex) {\n        if (playerObject.pass) userHasNoPossibleCards = true;\n        else {\n          const possibleCards = this.findPossibleCards(playerObject.index);\n          if (!possibleCards.length) userHasNoPossibleCards = true;\n          this.sendPossibleCardsToUser(possibleCards);\n        }\n      } else if (!playerObject.timer) {\n        const possibleCards = this.findPossibleCards(playerObject.index)\n          .filter(cardId => \n            !playerObject.rejected.includes(cardId));\n        \n        if (possibleCards.length) {\n          const randomTime = isUserInGame ? \n            Math.random() * 2000 + 2000 :\n            Math.random() * 1500 + 1500;\n          \n          playerObject.timer = setTimeout(\n            () => {\n              playerObject.timer = null;\n              const decision = this.makeDecision(playerObject.index);\n              if (decision) this.makeMove(playerObject.index, decision);\n              else playerObject.rejected.push(...possibleCards);\n\n              this.updateActivePlayerTimers();\n            }, randomTime);\n        }\n      }\n    }\n    if (this.activePlayers.playersDontHaveTimers() && userHasNoPossibleCards) {\n      this.endTrick();\n    }\n  }\n  endTrick() {\n    this.defendSucceed = this.cards.table.reduce((bool, attack) =>\n      attack.length === 1 ? false : bool, true);\n\n    this.clearTable();\n    this.drawCardsFromDeck();\n  }\n  clearTable() {\n    const playerCards = helpers.getDeepCopy(this.cards.players[this.defender]);\n    const discardedCards = helpers.getDeepCopy(this.cards.discarded);\n    for (const attack of this.cards.table) {\n      for (const card of attack) {\n        if (this.defendSucceed) discardedCards.push(card);\n        else playerCards.push(card);\n      }\n    }\n    this.cards = {\n      ...this.cards,\n      players: this.cards.players.map((cards, index) =>\n        index === this.defender ? playerCards : cards),\n      discarded: discardedCards,\n      table: []\n    };\n    this.sortPlayerCards();\n    this.observable.update([{ prop: 'cards', value: this.cards }]);\n  }\n  drawCardsFromDeck() {\n    const playersNumber = this.cards.players.length;\n    let playersDrawnCards = 0;\n    let index = this.attacker;\n    const changePlayers = (index, newCards) =>\n      this.cards.players.map((cards, i) => index === i ? newCards : cards);\n\n    while(playersDrawnCards < playersNumber) {\n      const playerHasCards = this.cards.players[index].length;\n      if (playerHasCards < config.maxCardsAfterDealing) {\n        const cardsNeeded = config.maxCardsAfterDealing - playerHasCards;\n        const playerCards = helpers.getDeepCopy(this.cards.players[index]);\n        const deckCards = helpers.getDeepCopy(this.cards.deck);\n\n        for (let i = 0; i < cardsNeeded; i++) {\n          if (deckCards.length) {\n            const lastDeckCard = deckCards.pop();\n            playerCards.push(lastDeckCard);\n          }\n        }\n\n        this.cards = {\n          ...this.cards,\n          players: changePlayers(index, playerCards),\n          deck: deckCards\n        };\n      }\n\n      this.sortPlayerCards();\n      this.observable.update([{ prop: 'cards', value: this.cards }]);\n      playersDrawnCards++;\n      index = index - 1;\n      if (index === -1) index = playersNumber - 1;\n    }\n  }\n  endGame() {\n    let loser = null;\n    for (const [playerIndex, cards] of this.cards.players.entries()) {\n      if (cards.length) {\n        loser = playerIndex;\n        break;\n      }\n    }\n    this.trumpSuit = null;\n    this.cards = {\n      deck: [],\n      players: [],\n      table: [],\n      discarded: []\n    };\n    this.observable.update([\n      { prop: 'isPlaying', value: false },\n      { prop: 'trumpSuit', value: null },\n      { prop: 'attacker', value: null },\n      { prop: 'defender', value: null },\n      { prop: 'loser', value: loser }\n    ]);\n  }\n  makeUserMove(cardId) {\n    const possibleCards = this.findPossibleCards(this.userIndex);\n    if (possibleCards.includes(cardId)) {\n      this.makeMove(this.userIndex, cardId);\n      this.updateActivePlayerTimers();\n    }\n  }\n  pass() {\n    this.activePlayers.userPass();\n    this.observable.update([{prop: 'possibleCards', value: []}])\n    this.updateActivePlayerTimers();\n  }\n};\n\nexport default GameState;","export default {\n  functions: [],\n  delaying: false,\n  add(fn) {\n    this.functions.push(fn);\n    this.run();\n  },\n  run() {\n    if (this.functions.length && !this.delaying) {\n      const fn = this.functions[0];\n      this.delaying = true;\n      setTimeout(() => {\n        fn();\n        this.functions.shift();\n        this.delaying = false;\n        this.run();\n      }, 200);\n    }\n  }\n};\n","import React, {Component} from 'react';\nimport websocket from '../websocket';\nimport AppContext from '../context/AppContext';\nimport Menu from './Menu';\nimport WaitPage from './WaitPage';\nimport Table from './Table';\nimport Cards from './Cards';\nimport PassButton from './PassButton';\nimport Arrow from './Arrow';\nimport Timer from './Timer';\nimport Filters from './Filters';\nimport GameState from '../lib/GameState';\nimport delayedFunctions from '../lib/delayed-functions';\nimport * as helpers from '../lib/helpers';\nimport '../stylesheets/App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tviewport: {\n\t\t\t\twidth: 1024,\n\t\t\t\theight: 768\n\t\t\t},\n\t\t\tisPlaying: false,\n\t\t\tisWaiting: false,\n\t\t\tuserIndex: 0,\n\t\t\tusername: '',\n\t\t\tmode: 'single-player',\n\t\t\tplayersNumber: 2,\n\t\t\tplayers: [],\n\t\t\tcards: {\n\t\t\t\tdeck: [],\n\t\t\t\tplayers: [],\n\t\t\t\ttable: [],\n\t\t\t\tdiscarded: []\n\t\t\t},\n\t\t\tpossibleCards: [],\n\t\t\tattacker: null,\n\t\t\tdefender: null,\n\t\t\ttrumpSuit: null,\n\t\t\tloser: null,\n\t\t\tshowButton: false,\n\t\t\tmovedCard: null,\n\t\t\ttimer: null\n\t\t};\n\n\t\tthis.timeout = null;\n\t\tthis.gameState = null;\n\t\tthis.cardStyles = null;\n\t\tthis.handleStateUpdate = this.handleStateUpdate.bind(this);\n\t\tthis.updateViewport = this.updateViewport.bind(this);\n\t\tthis.startGame = this.startGame.bind(this);\n\t\tthis.makeMove = this.makeMove.bind(this);\n\t\tthis.pass = this.pass.bind(this);\n\t\tthis.updateCardStyles = this.updateCardStyles.bind(this);\n\t\tthis.addMovedCard = this.addMovedCard.bind(this);\n\t\tthis.removeMovedCard = this.removeMovedCard.bind(this);\n\t\tthis.changeName = this.changeName.bind(this);\n\t\tthis.changeMode = this.changeMode.bind(this);\n\t\tthis.changePlayersNumber = this.changePlayersNumber.bind(this);\n\t\tthis.saveUserSettings = this.saveUserSettings.bind(this);\n\t\tthis.waitUsers = this.waitUsers.bind(this);\n\t\tthis.cancelWaiting = this.cancelWaiting.bind(this);\n\t\tthis.startMultiplayGame = this.startMultiplayGame.bind(this);\n\t\tthis.reduceTimer = this.reduceTimer.bind(this);\n\t}\n\n\tgetUserSettings() {\n\t\tconst settingsString = localStorage.getItem('settings');\n\t\tif (settingsString) {\n\t\t\tconst settings = JSON.parse(settingsString);\n\t\t\tconst { username, mode, playersNumber } = settings;\n\t\t\tthis.setState({ username, mode, playersNumber });\n\t\t}\n\t}\n\n\tsaveUserSettings() {\n\t\tconst { username, mode, playersNumber } = this.state;\n\t\tconst settingsString = JSON.stringify({ username, mode, playersNumber });\n\t\tlocalStorage.setItem('settings', settingsString);\n\t}\n\n\tchangeName(name) {\n\t\tthis.setState({ username: name });\n\t}\n\n\tchangeMode(mode) {\n\t\tthis.setState({ mode });\n\t}\n\n\tchangePlayersNumber(number) {\n\t\tthis.setState({ playersNumber: number });\n\t}\n\n\twaitUsers() {\n\t\tthis.setState({ isWaiting: true });\n\t}\n\n\tcancelWaiting() {\n\t\tthis.setState({ isWaiting: false });\n\t}\n\n\tstartMultiplayGame() {\n\t\tthis.setState({ isWaiting: false, isPlaying: true });\n\t\twebsocket.listen((type, msgObj) => {\n\t\t\tif (type === 'message' && msgObj.type === 'gameStateUpdate') {\n\t\t\t\tdelayedFunctions.add(() => this.handleStateUpdate(msgObj.data.updates));\n\t\t\t}\n\t\t});\n\t}\n\n\taddObserver() {\n\t\treturn this.gameState.observable.subscribe(updates => {\n\t\t\tdelayedFunctions.add(() => this.handleStateUpdate(updates));\n\t\t});\n\t}\n\n\tupdateCardStyles(cardId, style) {\n\t\tthis.cardStyles = {\n\t\t\t...this.cardStyles,\n\t\t\t[cardId]: style\n\t\t};\n\t}\n\n\tupdateViewport() {\n\t\tconst html = document.documentElement;\n\t\tconst width = html.clientWidth;\n\t\tconst height = html.clientHeight;\n\t\tthis.setState({\n\t\t\tviewport: { width, height }\n\t\t});\n\t}\n\n\taddResizeListener() {\n\t\tlet throttled = false;\n\t\tconst fn = () => {\n\t\t\tif (!throttled) {\n\t\t\t\tthrottled = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthrottled = false;\n\t\t\t\t\tthis.updateViewport();\n\t\t\t\t}, 300);\n\t\t\t}\n\t\t};\n\t\twindow.addEventListener('resize', fn);\n\t\treturn () => window.removeEventListener('resize', fn);\n\t}\n\n\tgenPlayers(playersNumber) {\n\t\tconst players = Array.from(\n\t\t\t{ length: playersNumber },\n\t\t\t(_, i) => ({ name: 'Player' + i })\n\t\t);\n\t\treturn players;\n\t}\n\n\thandleStateUpdate(updates) {\n\t\tconst updateObject = {};\n\t\tfor (let { prop, value } of updates) {\n\t\t\tupdateObject[prop] = value;\n\t\t}\n\n\t\tthis.setState(updateObject);\n\t}\n\n\taddMovedCard(cardId) {\n\t\tthis.setState({movedCard: cardId});\n\t}\n\n\tremoveMovedCard() {\n\t\tthis.setState({movedCard: null});\n\t}\n\n\tstartGame() {\n\t\tconst { playersNumber } = this.state;\n\t\tthis.gameState = new GameState();\n\t\tthis.unsubscribe = this.addObserver();\n\t\tthis.setState({ \n\t\t\tisPlaying: true,\n\t\t\tplayers: this.genPlayers(playersNumber)\n\t\t});\n\n\t\tthis.gameState.initNewGame(playersNumber);\n\t\tthis.gameState.startGame();\n\t}\n\n\tmakeMove(cardId) {\n\t\tif (this.state.mode === 'single-player') {\n\t\t\tthis.gameState.makeUserMove(cardId);\n\t\t} else {\n\t\t\twebsocket.send({ type: 'move', data: { cardId } });\n\t\t}\n\t}\n\n\tpass() {\n\t\tif (this.state.mode === 'single-player') {\n\t\t\tthis.gameState.pass();\n\t\t} else {\n\t\t\twebsocket.send({ type: 'pass' });\n\t\t}\n\t}\n\n\tskip() {\n\t\twebsocket.send({ type: 'skip' });\n\t}\n\n\thandleStartTrick(prevState) {\n\t\tif (this.state.mode === 'multiplayer') return;\n\t\tconst prevAttacks = prevState.cards.table;\n\t\tconst currAttacks = this.state.cards.table;\n\t\tconst prevTrump = prevState.trumpSuit;\n\t\tconst currTrump = this.state.trumpSuit;\n\t\tconst tableGetEmpty = !!prevAttacks.length && !currAttacks.length;\n\t\tconst trumpHasChosen = !prevTrump && currTrump;\n\t\tif (tableGetEmpty || trumpHasChosen) this.gameState.startTrick();\n\t}\n\n\thandleShowButton(prevState) {\n\t\tconst { possibleCards: prevPossibleCards } = prevState;\n\t\tconst { possibleCards, cards: { table: attacks }, showButton } = this.state;\n\t\tif (possibleCards.length && attacks.length) {\n\t\t\tif (prevPossibleCards.length !== possibleCards.length && !showButton) {\n\t\t\t\tthis.setState({ showButton: true });\n\t\t\t}\n\t\t} else if (showButton) this.setState({ showButton: false });\n\t}\n\n\thandleEndGame(prevState) {\n\t\tif (prevState.isPlaying && !this.state.isPlaying) {\n\t\t\tif (this.state.mode === 'multiplayer') {\n\t\t\t\twebsocket.close();\n\t\t\t} else {\n\t\t\t\tthis.gameState = null;\n\t\t\t\tthis.unsubscribe();\n\t\t\t}\n\t\t}\n\t}\n\n\treduceTimer() {\n\t\tconst { timer } = this.state;\n\t\tthis.setState({timer: timer - 1 });\n\t\tif (timer === 1) this.skip();\n\t\telse this.timeout = setTimeout(this.reduceTimer, 1000);\n\t}\n\n\thandleTimerUpdate(prevState) {\n\t\tif (this.state.mode === 'multiplayer') {\n\t\t\tif (prevState.possibleCards.length !== this.state.possibleCards.length) {\n\t\t\t\tif (this.state.possibleCards.length) {\n\t\t\t\t\tthis.setState({timer: 10});\n\t\t\t\t\tif (this.timeout) clearTimeout(this.timeout);\n\t\t\t\t\tthis.timeout = setTimeout(this.reduceTimer, 1000);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({timer: null});\n\t\t\t\t\tif (this.timeout) clearTimeout(this.timeout);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateViewport();\n\t\tthis.getUserSettings();\n\t\tthis.removeListener = this.addResizeListener();\n\t}\n\n\tcomponentDidUpdate(_, prevState) {\n\t\tthis.handleStartTrick(prevState);\n\t\tthis.handleShowButton(prevState);\n\t\tthis.handleEndGame(prevState);\n\t\tthis.handleTimerUpdate(prevState);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.removeListener) this.removeListener();\n\t\tif (this.unsubscribe) this.unsubscribe();\n\t}\n\n\trender() {\n\t\tconst field = helpers.getFieldProps(this.state.viewport);\n\t\treturn (\n\t\t\t<AppContext.Provider value={{\n\t\t\t\tlang: this.props.lang,\n\t\t\t\tcardStyles: this.cardStyles, \n\t\t\t\tpossibleCards: this.state.possibleCards, \n\t\t\t\ttrumpSuit: this.state.trumpSuit, \n\t\t\t\tmovedCard: this.state.movedCard,\n\t\t\t\tupdateCardStyles: this.updateCardStyles, \n\t\t\t\tmakeMove: this.makeMove,\n\t\t\t\taddMovedCard: this.addMovedCard,\n\t\t\t\tremoveMovedCard: this.removeMovedCard\n\t\t\t}}>\n\t\t\t\t<Menu \n\t\t\t\t\tfield={field}\n\t\t\t\t\tisPlaying={this.state.isPlaying}\n\t\t\t\t\tusername={this.state.username}\n\t\t\t\t\tmode={this.state.mode} \n\t\t\t\t\tplayersNumber={this.state.playersNumber} \n\t\t\t\t\tchangeName={this.changeName}\n\t\t\t\t\tchangeMode={this.changeMode} \n\t\t\t\t\tchangePlayersNumber={this.changePlayersNumber}\n\t\t\t\t\tstartGame={this.startGame}\n\t\t\t\t\twaitUsers={this.waitUsers}\n\t\t\t\t\tsaveUserSettings={this.saveUserSettings}\n\t\t\t\t/>\n\t\t\t\t<WaitPage \n\t\t\t\t\tfield={field}\n\t\t\t\t\tusername={this.state.username} \n\t\t\t\t\tplayersNumber={this.state.playersNumber} \n\t\t\t\t\tisPlaying={this.state.isPlaying}\n\t\t\t\t\tisWaiting={this.state.isWaiting}\n\t\t\t\t\tcancelWaiting={this.cancelWaiting}\n\t\t\t\t\tstartMultiplayGame={this.startMultiplayGame}\n\t\t\t\t/>\n\t\t\t\t<svg className=\"app\" >\n\t\t\t\t\t<g className=\"field\" width={field.width} height={field.height} style={field.style}>\n\t\t\t\t\t\t<Table field={field} />\n\t\t\t\t\t\t<Cards \n\t\t\t\t\t\t\tcards={this.state.cards} \n\t\t\t\t\t\t\tfield={field} \n\t\t\t\t\t\t\tplayers={this.state.players} \n\t\t\t\t\t\t\tuserIndex={this.state.userIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PassButton\n\t\t\t\t\t\t\tshow={this.state.showButton}\n\t\t\t\t\t\t\ttext={this.state.defender === this.state.userIndex ? \n\t\t\t\t\t\t\t\tthis.props.lang === 'ru' ? 'Взять' : 'Pick up' : \n\t\t\t\t\t\t\t\tthis.props.lang === 'ru' ? 'Пас' : 'Pass'}\n\t\t\t\t\t\t\tpass={this.state.showButton ? this.pass : null}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Arrow \n\t\t\t\t\t\t\tfield={field}\n\t\t\t\t\t\t\tdefenderIndex={this.state.defender} \n\t\t\t\t\t\t\tplayersCount={this.state.players.length} \n\t\t\t\t\t\t\tuserIndex={this.state.userIndex}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Timer timer={this.state.timer} />\n\t\t\t\t\t</g>\n\t\t\t\t\t<Filters />\n\t\t\t\t</svg>\n\t\t\t</AppContext.Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './stylesheets/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst lang = window.location.pathname === '/ru' ? 'ru' : 'en';\nif (lang === 'ru') document.title = 'Дурак';\n\nReactDOM.render(\n  <App lang={lang} />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}